{
  "createdAt": "2025-06-11T08:49:36.999Z",
  "updatedAt": "2025-06-11T08:49:40.207Z",
  "id": "om4JuFgsNJsDXfJh",
  "name": "AppTest-Extracting_LinkedIn_profile_data",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "path": "onboarding/leadgeneration/tests/ExtractingLinkedInProfileData",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -340,
        -120
      ],
      "id": "77124989-c1b5-48c0-9ff2-826f5cffc817",
      "name": "Webhook",
      "webhookId": "3e86e1b6-d5dd-4fa7-89ef-e3c03fd50d34"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <link type=\"image/png\" sizes=\"16x16\" rel=\"icon\" href=\"https://i.postimg.cc/gJf9MgWR/icons8-32.png\">\n  <meta charset=\"UTF-8\">\n  <title>Extracting LinkedIn profile data</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    :root {\n      --deep-blue: #081E2F;\n      --primary-yellow: #FCB305;\n      --red: #D32F2F;\n      --red-hover: #C62828;\n      --green: #2E7D32;\n      --green-hover: #1B5E20;\n      --blue: #197502;\n      --blue-dark: #1555C0;\n      --blue-light: #4245F5;\n    }\n    body {\n      font-family: 'Open Sans', sans-serif;\n      background: #F8F9FA;\n      padding: 2rem;\n      max-width: 800px;\n      margin: 0 auto;\n      min-height: 100vh;\n    }\n    #titlePage {\n      text-align: center;\n      padding: 3rem 1rem;\n    }\n    #titlePage h1 {\n      font-size: 32px;\n      color: var(--deep-blue);\n      margin-bottom: 1.5rem;\n    }\n    .quiz-info {\n      background: white;\n      padding: 2rem;\n      border-radius: 12px;\n      box-shadow: 0 4px 12px rgba(8, 30, 47, 0.1);\n      margin: 2rem auto;\n      max-width: 500px;\n    }\n    .info-item {\n      font-size: 16px;\n      color: #4A4A4A;\n      margin: 1rem 0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    #timer {\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: var(--green);\n      color: white;\n      padding: 8px 16px;\n      border-radius: 20px;\n      font-weight: 600;\n      box-shadow: 0 2px 6px rgba(46, 125, 50, 0.2);\n    }\n    .hidden {\n      display: none;\n    }\n    .question {\n      background: white;\n      border-radius: 8px;\n      padding: 1.5rem;\n      margin-bottom: 1.5rem;\n      box-shadow: 0 2px 8px rgba(8, 30, 47, 0.1);\n      transition: all 0.3s ease;\n    }\n    .question h3 {\n      font-size: 16px;\n      font-weight: 600;\n      color: var(--deep-blue);\n      margin: 0 0 1rem 0;\n    }\n    label {\n      display: block;\n      margin: 0.5rem 0;\n      padding: 0.75rem;\n      border-radius: 4px;\n      font-size: 14px;\n      color: #4A4A4A;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n    label:hover {\n      background: rgba(25, 118, 210, 0.04);\n    }\n    /* Single-answer (radio) styled as circles */\n    input[type=\"radio\"] {\n      margin-right: 0.75rem;\n      accent-color: var(--green);\n      border-radius: 50%;\n      width: 16px;\n      height: 16px;\n    }\n    /* Multi-answer (checkbox) */\n    input[type=\"checkbox\"] {\n      margin-right: 0.75rem;\n      accent-color: var(--green);\n    }\n    input[type=\"text\"],\n    input[type=\"number\"] {\n      padding: 0.5rem;\n      border: 1px solid #DEE2E6;\n      border-radius: 4px;\n      font-size: 14px;\n      width: 100%;\n      box-sizing: border-box;\n    }\n    /* Make the \"Profession\" field read-only */\n    input[disabled] {\n      background: #f3f3f3;\n      color: #888;\n    }\n    button {\n      background: var(--green);\n      color: white;\n      border: none;\n      padding: 12px 24px;\n      border-radius: 6px;\n      font-weight: 700;\n      font-size: 15px;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      display: block;\n      margin: 2rem auto 0;\n      letter-spacing: 0.5px;\n    }\n    button:hover {\n      background: var(--green-hover);\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px rgba(46, 125, 50, 0.3);\n    }\n    #result {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      text-align: center;\n      margin-top: 2rem;\n      box-shadow: 0 2px 8px rgba(8, 30, 47, 0.1);\n    }\n    .correct {\n      border-left: 4px solid var(--green);\n      background: #F0F9FF;\n    }\n    .incorrect {\n      border-left: 4px solid var(--red);\n    }\n    .correct-answer {\n      background: #E8F5E9 !important;\n      border: 1px solid var(--green);\n      border-radius: 4px;\n      padding: 2px 4px;\n      margin-top: 0.5rem;\n      display: inline-block;\n    }\n    @media (max-width: 600px) {\n      body {\n        padding: 1rem;\n      }\n      .question {\n        padding: 1rem;\n      }\n      button {\n        width: 100%;\n        padding: 14px 20px;\n      }\n      #timer {\n        top: 10px;\n        right: 10px;\n        font-size: 14px;\n      }\n    }\n  </style>\n</head>\n<body>\n  <!-- Title Page -->\n  <div id=\"titlePage\">\n    <h1>Extracting LinkedIn profile data</h1>\n    <div class=\"quiz-info\">\n      <div class=\"info-item\">\n        <span>Questions:</span>\n        <strong>15</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Time Limit:</span>\n        <strong>5 minutes</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Passing Score:</span>\n        <strong>80%</strong>\n      </div>\n      <button id=\"startExamBtn\" onclick=\"startQuiz()\">Start Exam</button>\n    </div>\n  </div>\n\n  <!-- Quiz Container -->\n  <div id=\"quizContainer\" class=\"hidden\">\n    <div id=\"timer\">00:00</div>\n    <h1>Extracting LinkedIn profile data</h1>\n    <form id=\"examForm\">\n      <!-- User Data Block (not scored) -->\n      <div class=\"question\" data-points=\"0\">\n        <h3>Enter Your Information</h3>\n        <label>\n          Your Name:\n          <input type=\"text\" name=\"fullName\" placeholder=\"e.g., John Doe\">\n        </label>\n        <label>\n          Your Profession:\n          <input type=\"text\" name=\"profession\" value=\"LinkedIn Specialist\" disabled>\n        </label>\n        <label>\n          Your Recruiter:\n          <select name=\"recruiter\">\n            <option value=\"Anastasia Fadeeva\">Anastasia Fadeeva</option>\n            <option value=\"Elena Ermakova\">Elena Ermakova</option>\n            <option value=\"Anna Aleksandrova\">Anna Aleksandrova</option>\n            <option value=\"Sabina Gasanova\">Sabina Gasanova</option>\n          </select>\n        </label>\n      </div>\n\n      <!-- Questions (15 total) -->\n      <!-- Q1 (Multi-Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>1. Select the two key extensions required to extract LinkedIn profile data into CRM automatically.</h3>\n        <label><input type=\"checkbox\" name=\"q1\" value=\"REExtension\" data-correct=\"true\"> RE Extension for LinkedIn</label>\n        <label><input type=\"checkbox\" name=\"q1\" value=\"SalesQLExtension\" data-correct=\"true\"> SalesQL Extension</label>\n        <label><input type=\"checkbox\" name=\"q1\" value=\"LinkedInNavigator\"> LinkedIn Sales Navigator</label>\n        <label><input type=\"checkbox\" name=\"q1\" value=\"Grammarly\"> Grammarly Extension</label>\n      </div>\n\n      <!-- Q2 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>2. In installing the RE Extension for LinkedIn, what is the first step?</h3>\n        <label><input type=\"radio\" name=\"q2\" value=\"download\" data-correct=\"true\"> Download the Extension</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"extract\"> Extract the Archive</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"loadChrome\"> Load the Extension into Chrome</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"pinExtension\"> Pin the Extension</label>\n      </div>\n\n      <!-- Q3 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>3. After downloading the RE Extension .zip file, what must you do next?</h3>\n        <label><input type=\"radio\" name=\"q3\" value=\"extract\" data-correct=\"true\"> Extract the archive</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"loadDirectly\"> Load it directly into Chrome</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"delete\"> Delete the .zip file</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"rename\"> Rename the file</label>\n      </div>\n\n      <!-- Q4 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>4. Before loading the RE Extension into Chrome, which mode must be enabled?</h3>\n        <label><input type=\"radio\" name=\"q4\" value=\"incognito\"> Incognito Mode</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"developer\" data-correct=\"true\"> Developer Mode</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"safe\"> Safe Mode</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"guest\"> Guest Mode</label>\n      </div>\n\n      <!-- Q5 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>5. After loading the RE Extension, what should you do to keep it visible?</h3>\n        <label><input type=\"radio\" name=\"q5\" value=\"pin\" data-correct=\"true\"> Pin the extension in the Chrome toolbar</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"minimize\"> Minimize Chrome</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"disable\"> Disable Developer Mode</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"restart\"> Restart your computer</label>\n      </div>\n\n      <!-- Q6 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>6. With the RE Extension loaded, which credentials do you use to sign in?</h3>\n        <label><input type=\"radio\" name=\"q6\" value=\"linkedinCreds\">\n          Your LinkedIn username and password\n        </label>\n        <label><input type=\"radio\" name=\"q6\" value=\"emailCRM\" data-correct=\"true\">\n          Your email and CRM password\n        </label>\n        <label><input type=\"radio\" name=\"q6\" value=\"phone\">\n          Your phone number\n        </label>\n        <label><input type=\"radio\" name=\"q6\" value=\"companyID\">\n          Your company ID\n        </label>\n      </div>\n\n      <!-- Q7 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>7. From where should you install the SalesQL Extension?</h3>\n        <label><input type=\"radio\" name=\"q7\" value=\"chromeStore\" data-correct=\"true\">\n          The Chrome Web Store\n        </label>\n        <label><input type=\"radio\" name=\"q7\" value=\"firefox\">\n          Firefox Add-ons\n        </label>\n        <label><input type=\"radio\" name=\"q7\" value=\"linkedinSite\">\n          LinkedIn official site\n        </label>\n        <label><input type=\"radio\" name=\"q7\" value=\"github\">\n          GitHub\n        </label>\n      </div>\n\n      <!-- Q8 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>8. Which step is part of the SalesQL extension setup process?</h3>\n        <label><input type=\"radio\" name=\"q8\" value=\"acceptTOS\" data-correct=\"true\">\n          Accept the Terms of Service &amp; Privacy Policy\n        </label>\n        <label><input type=\"radio\" name=\"q8\" value=\"downloadZip\">\n          Download a .zip archive\n        </label>\n        <label><input type=\"radio\" name=\"q8\" value=\"enableDev\">\n          Enable Developer Mode\n        </label>\n        <label><input type=\"radio\" name=\"q8\" value=\"extractFolder\">\n          Extract the downloaded folder\n        </label>\n      </div>\n\n      <!-- Q9 (Multi) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>9. Select all steps involved in using the SalesQL Extension to extract LinkedIn profile data.</h3>\n        <label><input type=\"checkbox\" name=\"q9\" value=\"visitProfile\" data-correct=\"true\">\n          Go to a LinkedIn profile\n        </label>\n        <label><input type=\"checkbox\" name=\"q9\" value=\"clickIcon\" data-correct=\"true\">\n          Click the SalesQL icon\n        </label>\n        <label><input type=\"checkbox\" name=\"q9\" value=\"revealAdd\" data-correct=\"true\">\n          Click \"Reveal info &amp; Add\"\n        </label>\n        <label><input type=\"checkbox\" name=\"q9\" value=\"copyContact\" data-correct=\"true\">\n          Copy the provided email and phone number\n        </label>\n        <label><input type=\"checkbox\" name=\"q9\" value=\"loadUnpacked\">\n          Click \"Load unpacked\"\n        </label>\n      </div>\n\n      <!-- Q10 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>10. When using the RE Extension for LinkedIn, what happens automatically after clicking its button?</h3>\n        <label><input type=\"radio\" name=\"q10\" value=\"sendRequest\">\n          It sends a connection request\n        </label>\n        <label><input type=\"radio\" name=\"q10\" value=\"extractData\" data-correct=\"true\">\n          It extracts available profile data\n        </label>\n        <label><input type=\"radio\" name=\"q10\" value=\"logOut\">\n          It logs you out\n        </label>\n        <label><input type=\"radio\" name=\"q10\" value=\"openChat\">\n          It opens a chat window\n        </label>\n      </div>\n\n      <!-- Q11 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>11. Which of the following is NOT a field you must verify in the extracted data?</h3>\n        <label><input type=\"radio\" name=\"q11\" value=\"email\"> Email</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"leadPosition\"> Lead Position</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"companyName\"> Company Name</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"browserHistory\" data-correct=\"true\">\n          Browser history\n        </label>\n      </div>\n\n      <!-- Q12 (Multi) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>12. Select all actions you must take when verifying and correcting extracted data.</h3>\n        <label><input type=\"checkbox\" name=\"q12\" value=\"checkEmail\" data-correct=\"true\">\n          Ensure the email is correct\n        </label>\n        <label><input type=\"checkbox\" name=\"q12\" value=\"verifyPosition\" data-correct=\"true\">\n          Verify that the Lead Position matches CRM format\n        </label>\n        <label><input type=\"checkbox\" name=\"q12\" value=\"checkCompany\" data-correct=\"true\">\n          Check that the Company Name is correct\n        </label>\n        <label><input type=\"checkbox\" name=\"q12\" value=\"selectIndustry\" data-correct=\"true\">\n          Confirm the Industry and Company Location\n        </label>\n        <label><input type=\"checkbox\" name=\"q12\" value=\"changeBgColor\">\n          Change the CRM background color\n        </label>\n      </div>\n\n      <!-- Q13 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>13. What should you do if the company location in the extracted data is incorrect?</h3>\n        <label><input type=\"radio\" name=\"q13\" value=\"ignore\">\n          Ignore it\n        </label>\n        <label><input type=\"radio\" name=\"q13\" value=\"recreate\" data-correct=\"true\">\n          Recreate the lead card with your team lead\n        </label>\n        <label><input type=\"radio\" name=\"q13\" value=\"delete\">\n          Delete the entire CRM record\n        </label>\n        <label><input type=\"radio\" name=\"q13\" value=\"emailLinkedIn\">\n          Send an automated email to LinkedIn\n        </label>\n      </div>\n\n      <!-- Q14 (Multi) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>14. Select all best practices for efficient data extraction.</h3>\n        <label><input type=\"checkbox\" name=\"q14\" value=\"verifiedProfiles\" data-correct=\"true\">\n          Extract data only from verified LinkedIn profiles\n        </label>\n        <label><input type=\"checkbox\" name=\"q14\" value=\"crossCheck\" data-correct=\"true\">\n          Cross-check SalesQL and LinkedIn data\n        </label>\n        <label><input type=\"checkbox\" name=\"q14\" value=\"correctTitles\" data-correct=\"true\">\n          Use correct job titles and industries\n        </label>\n        <label><input type=\"checkbox\" name=\"q14\" value=\"ignoreIrrelevant\">\n          Add irrelevant leads for quantity\n        </label>\n        <label><input type=\"checkbox\" name=\"q14\" value=\"manualFill\" data-correct=\"true\">\n          Manually fill in missing details if needed\n        </label>\n      </div>\n\n      <!-- Q15 (Multi) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>15. Select all troubleshooting steps if an extension is not working properly.</h3>\n        <label><input type=\"checkbox\" name=\"q15\" value=\"enableDev\" data-correct=\"true\">\n          Ensure Chrome Developer Mode is enabled\n        </label>\n        <label><input type=\"checkbox\" name=\"q15\" value=\"reloadReinstall\" data-correct=\"true\">\n          Reload or reinstall the extension and sign in again\n        </label>\n        <label><input type=\"checkbox\" name=\"q15\" value=\"reportIssue\" data-correct=\"true\">\n          Report the issue to your manager or support team\n        </label>\n        <label><input type=\"checkbox\" name=\"q15\" value=\"ignoreIssue\">\n          Ignore the issue\n        </label>\n        <label><input type=\"checkbox\" name=\"q15\" value=\"massConnect\">\n          Use mass connection requests\n        </label>\n      </div>\n\n      <button id=\"submitExamBtn\" type=\"button\" onclick=\"calculateScore()\">Submit Exam</button>\n    </form>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    // Fisher–Yates shuffle function\n    function shuffle(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      return array;\n    }\n    // Randomize answer labels (excluding user data block)\n    function randomizeAnswers() {\n      const questions = document.querySelectorAll('.question[data-points]:not([data-points=\"0\"])');\n      questions.forEach(question => {\n        const labels = Array.from(question.querySelectorAll('label'));\n        const shuffled = shuffle(labels);\n        shuffled.forEach(lbl => lbl.parentNode.removeChild(lbl));\n        const heading = question.querySelector('h3');\n        shuffled.forEach(lbl => heading.parentNode.appendChild(lbl));\n      });\n    }\n    let timer;\n    let seconds = 0;\n    const timeLimit = 300; // 5 minutes\n    const examName = \"Extracting LinkedIn profile data\";\n    function startQuiz() {\n      document.getElementById('titlePage').classList.add('hidden');\n      document.getElementById('quizContainer').classList.remove('hidden');\n      randomizeAnswers();\n      startTimer();\n    }\n    function startTimer() {\n      timer = setInterval(() => {\n        seconds++;\n        const minutes = Math.floor(seconds / 60);\n        const remain = seconds % 60;\n        document.getElementById('timer').textContent =\n          String(minutes).padStart(2, '0') + \":\" + String(remain).padStart(2, '0');\n        if (seconds >= timeLimit) {\n          clearInterval(timer);\n          calculateScore(true);\n        }\n      }, 1000);\n    }\n    function calculateScore(timeout = false) {\n      const submitBtn = document.getElementById('submitExamBtn');\n      if (submitBtn) {\n        submitBtn.style.display = 'none';\n      }\n      clearInterval(timer);\n      let totalPoints = 0;\n      let maxPoints = 0;\n      const questions = document.querySelectorAll('.question');\n      questions.forEach(question => {\n        const points = parseInt(question.dataset.points) || 1;\n        maxPoints += points;\n        if (points === 0) return;\n        let correct = true;\n        const inputs = question.querySelectorAll('input');\n        let selectedValues = [];\n        let correctValues = [];\n        inputs.forEach(inp => {\n          if (inp.checked) selectedValues.push(inp.value);\n          if (inp.dataset.correct === \"true\") correctValues.push(inp.value);\n        });\n        if (\n          selectedValues.length !== correctValues.length ||\n          !selectedValues.every(val => correctValues.includes(val))\n        ) {\n          correct = false;\n        }\n        if (correct) {\n          totalPoints += points;\n          question.classList.add('correct');\n        } else {\n          question.classList.add('incorrect');\n          inputs.forEach(inp => {\n            if (inp.dataset.correct === \"true\") {\n              inp.parentElement.classList.add('correct-answer');\n            }\n          });\n        }\n      });\n      const percentage = ((totalPoints / maxPoints) * 100).toFixed(1);\n      const timeUsedSec = seconds;\n      const timeUsedStr = `${Math.floor(timeUsedSec / 60)}m ${timeUsedSec % 60}s`;\n      let resultsHTML = `\n        <h3>Exam Results</h3>\n        <p>Your score: ${totalPoints} / ${maxPoints} (${percentage}%)</p>\n        <p>Time used: ${timeUsedStr}</p>\n        ${percentage >= 80 ? \"Congratulations! You passed!\" : \"Try again! Review your mistakes below.\"}\n        ${timeout ? \"<p class='warning'>Time limit exceeded!</p>\" : \"\"}\n      `;\n      // Append Retry, Read Again, and Task buttons\n      resultsHTML += `\n        <button type=\"button\" onclick=\"location.reload()\">Retry</button>\n        <button type=\"button\" onclick=\"window.location.href='https://hook.eu1.make.com/jcjl176nvrhlm4ag7qiixjzssxqdbl5n'\">Read Again</button>\n        <button type=\"button\" id=\"taskButton\" onclick=\"loadTask()\">Task</button>\n      `;\n      document.getElementById('result').innerHTML = resultsHTML;\n      \n      const fullName = document.querySelector('[name=\"fullName\"]')?.value.trim() || \"\";\n      const profession = document.querySelector('[name=\"profession\"]')?.value.trim() || \"\";\n      const recruiter = document.querySelector('[name=\"recruiter\"]')?.value.trim() || \"\";\n      const postData = {\n        fullName,\n        profession,\n        recruiter,\n        day: \"4\",\n        examName,\n        scoreObtained: totalPoints,\n        scoreTotal: maxPoints,\n        timeUsed: timeUsedSec,\n        timeTotal: timeLimit\n      };\n      fetch(\"https://hook.eu1.make.com/2yp4rtezjxi2o6fi2jouedn3i7sgxss1\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(postData)\n      })\n      .then(response => response.text())\n      .then(data => console.log(\"POST response:\", data))\n      .catch(err => console.error(\"Error in POST:\", err));\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n    // loadTask() replaces the exam view with the task instructions and adds an optional link input field and a task completed checkbox.\n    function loadTask() {\n      const taskMarkdown = `# 🛠 Objective\n\nThis task is designed to test your ability to install the necessary extensions, extract LinkedIn profile data, and ensure the accuracy and organization of the extracted information in the CRM. You will perform real-world tasks involving LinkedIn data extraction and CRM entry.\n\n---\n\n# 🔹 Task 1: Installing and Setting Up Required Extensions\n\n## ✅ Steps to Complete:\n1. **Install the Extensions:**\n   - **RE Extension for LinkedIn:**  \n     Download and extract the RE Extension for LinkedIn, then load it into Chrome.\n   - **SalesQL Extension:**  \n     Install SalesQL from the Chrome Web Store and log in using the provided credentials.\n2. **Take a Screenshot:**\n   - Capture a screenshot of the Chrome extensions page showing both extensions successfully installed.\n3. **Pin the Extensions:**\n   - Pin both extensions to your Chrome toolbar for easy access.\n\n---\n\n# 🔹 Task 2: Extract LinkedIn Profile Data Using Both Extensions\n\n## ✅ Steps to Complete:\n1. **Choose a LinkedIn Profile:**\n   - Select a verified profile relevant to your target audience.\n2. **Extract Data Using SalesQL Extension:**\n   - Extract the following information:\n     - **Email**\n     - **Phone Number**\n   - Verify that the data appears in the SalesQL window and click **\"Reveal info & Add\"**.\n3. **Extract Data Using RE Extension:**\n   - Click the RE Extension button to extract all available data:\n     - **Name**\n     - **Position**\n     - **Company**\n     - **Industry**\n     - **Location**\n   - Confirm that the extracted data appears correctly in the CRM.\n4. **Record Missing Information:**\n   - Note any missing data and plan to add it manually.\n\n---\n\n# 🔹 Task 3: Verify and Correct Extracted Data\n\n## ✅ Steps to Complete:\n1. **Review Extracted Data:**\n   - Check for discrepancies or missing information.\n2. **Edit and Update Data:**\n   - Edit the CRM details manually if needed.\n3. **Log the Lead into the CRM:**\n   - Either add a new lead or update an existing company record.\n\n---\n\n# 🔹 Task 4: Handling Missing or Incorrect Data\n\n## ✅ Steps to Complete:\n1. **Check for Missing Data:**\n   - Verify whether any data (e.g., email or phone number) was missed.\n2. **Add Missing Details:**\n   - Manually input missing data into the CRM.\n3. **Correct Discrepancies:**\n   - Update the CRM to correct any discrepancies.\n4. **Review the Notes Section:**\n   - Resolve any issues noted in the CRM’s Notes section.\n\n---\n\n# 📌 Submission Instructions\n\n- **Document Format:** Google Docs or Word.\n- **Structure the Document as Follows:**\n  1. **Task 1:** Installation and Setup (Screenshot of Extensions)\n  2. **Task 2:** Data Extraction (Screenshot of Extracted Data in CRM)\n  3. **Task 3:** Data Verification & Correction (Screenshot of Updated CRM Lead Card, if applicable)\n  4. **Task 4:** Handling Missing or Incorrect Data (Screenshot and Summary)\n\n---\n\n# 💡 Bonus Challenge\n- **Troubleshooting:**  \n  Explain any troubleshooting steps you took to resolve issues during the extraction process.\n- **Enhancements:**  \n  List any other tools or tips you would use to enhance the data extraction process.\n\nBy completing this task, you will demonstrate your ability to extract and manage LinkedIn profile data in CRM systems while ensuring the accuracy and security of lead information.`;\n      \n      const parsedMarkdown = parseMarkdown(taskMarkdown);\n      document.body.innerHTML = `\n        <div style=\"font-family: 'Open Sans', sans-serif; background: #F8F9FA; padding: 2rem;\">\n          ${parsedMarkdown}\n          <div style=\"margin-top: 2rem;\">\n            <label for=\"taskLinkInput\" style=\"font-weight: bold;\">Optional link:</label>\n            <input type=\"text\" id=\"taskLinkInput\" placeholder=\"https://docs.google.com/...\" style=\"width: 100%; padding: 8px; margin: 4px 0 1rem;\">\n            <input type=\"checkbox\" id=\"taskCompletedCheckbox\">\n            <label for=\"taskCompletedCheckbox\">Task Completed</label>\n          </div>\n        </div>\n      `;\n      \n      const checkbox = document.getElementById(\"taskCompletedCheckbox\");\n      checkbox.addEventListener(\"change\", function() {\n        if (checkbox.checked) {\n          const taskLink = document.getElementById(\"taskLinkInput\").value.trim() || \"\";\n          fetch(\"https://hook.eu1.make.com/dy57247xgkw7criy6ind4j78ej3yqrx7\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ link: taskLink })\n          })\n          .then(response => response.text())\n          .then(data => {\n            console.log(\"Task completed webhook sent:\", data);\n            checkbox.disabled = true;\n          })\n          .catch(err => console.error(\"Error sending task completed webhook:\", err));\n        }\n      });\n    }\n    \n    // Markdown parser: converts markdown headings into collapsible <details> elements (collapsed by default)\n    function parseMarkdown(markdownText) {\n      const lines = markdownText.split('\\n');\n      let html = \"\";\n      const stack = [];\n      lines.forEach(line => {\n        const match = line.match(/^(#{1,4})\\s+(.*)/);\n        if (match) {\n          const level = match[1].length;\n          const text = match[2];\n          while (stack.length && stack[stack.length - 1] >= level) {\n            html += \"</details>\";\n            stack.pop();\n          }\n          // Create a details element without \"open\" so it remains collapsed\n          html += `<details><summary>${text}</summary>`;\n          stack.push(level);\n        } else {\n          html += line + \"<br>\";\n        }\n      });\n      while (stack.length) {\n        html += \"</details>\";\n        stack.pop();\n      }\n      return html;\n    }\n  </script>\n</body>\n</html>",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-type",
                "value": "text/html"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -120,
        -120
      ],
      "id": "f5edecb4-1851-4b02-9cba-8998bf6ada0b",
      "name": "Respond to Webhook",
      "notesInFlow": false
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "7ffa53d3-2aac-4003-b6a4-09ed9285bef4",
  "triggerCount": 0,
  "tags": []
}