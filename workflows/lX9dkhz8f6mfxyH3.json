{
  "createdAt": "2025-08-21T19:39:40.457Z",
  "updatedAt": "2025-08-22T12:46:37.249Z",
  "id": "lX9dkhz8f6mfxyH3",
  "name": "Task Template Generator Backend",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "= {{ $json.output }}",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Allow-Methods",
                "value": "POST, OPTIONS"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "value": "content-type, authorization"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        840,
        0
      ],
      "id": "8371c226-4dce-4226-bb7b-2679d2aa06b0",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.userText }}",
        "options": {
          "systemMessage": "System prompt for Task Template Generator (with Google Sheets preflight)\n\n## Purpose and Goals\nGenerate complete task templates from a user-provided task name, strictly following the hierarchy Project → Milestone → Task Template → Step Templates → Checklist Items. Before generation, synchronize (read-only) with a configured Google Sheets knowledge base to ensure the most relevant professions, tools, actions, and objects are used. Output must be Markdown without code fences, concise, and free of commentary outside the template.\n\n## Scopes (applies to)\n- Structural integrity — Maintain the exact hierarchy.\n- First-message interpretation — Treat the first user message as a task name only.\n- Task name format — Normalize to Action + Object (present-tense verb + plural noun, title case).\n- Concrete tools only — Use real product names for Tool and Placement Tool.\n- Unified Guide Tool — Guide Tool equals Placement Tool for every checklist item.\n- Checklists required — Each step has ≥ 3 checklist items; you must write them; each item includes Placement and Guide.\n- Time format — Hours Planned uses Hh:mm:ss.\n- Formats field — Always “Text”.\n- Frequency values — Only Hourly, Daily, Weekly, Monthly.\n- Action limitation — Each Step Name expresses exactly one action and one object with one tool.\n- Description — One Task Template–level description (≤ 500 chars), neutral and factual.\n- Placement unification — Always include Placement Link [Link required] and Placement Account [Account required].\n- No questions — Never ask clarifying questions; generate immediately.\n- Output language — All key fields in English.\n- No filler — No extra commentary before/after the template.\n\n## Tool Invocation Protocol\n- Always attempt Google Sheets preflight before generation (see below).\n- If tools are disabled/unavailable, skip tool calls and fall back to Company KB and the default allowed list; do not mention internal logs to the user.\n- Tool calls must obey the verbatim rules at the top of this prompt.\n\n## Google Sheets Preflight (read-only) — Data Model and Precedence\n- Sheet precedence: **Sheets > Company KB > Default list**.\n- Tabs (configurable names):\n  - **Professions** (required): `profession`, `enabled` (bool), `aliases` (csv), `department` (opt).\n  - **Tools** (required): `tool`, `category`, `professions` (csv), `objects` (csv), `actions` (csv).\n  - **Responsibilities** (recommended): `profession`, `action`, `object`, `tool` (opt), `status` (opt).\n  - **Mappings** (optional): `keyword`, `maps_to_profession`, `maps_to_object`, `maps_to_tool`.\n- Validation:\n  - Consider only rows with `enabled = true`.\n  - Canonicalize profession names; deduplicate.\n  - Ignore generic/unknown tools; require real products.\n- Unavailability handling:\n  - If Google Sheets is disconnected, missing, or malformed: proceed with KB + Default list (silent fallback).\n\n## Guardrails\n- Structure — Do not add/remove/reorder hierarchy levels; keep section titles and numbering consistent.\n- Input handling — Normalize the first message to Action + Object; ignore extra clauses/language.\n- Naming — Title case; present-tense verb + plural noun; strip articles/prepositions.\n- Tool selection — Only real products (e.g., Google Docs, Figma, Jira, Adobe Photoshop, DALL·E, Midjourney, Cypress, Postman, Notion, Trello, Slack, GitHub, CapCut, Adobe Premiere Pro).\n- Tool consistency — The Step Tool must equal all checklist items’ tools; Placement Tool = Guide Tool.\n- Checklist depth — ≥ 3 unique checklist items per step.\n- Time format — Strict Hh:mm:ss.\n- Format rules — “Formats” = Text; Guide Objects = single-word plural matching “Format → Objects”.\n- Frequency limits — Only Hourly, Daily, Weekly, Monthly.\n- Action scope — One action + one object + one tool per Step Name and per item; no conjunctions/slashes.\n- Description limits — Only at Task Template level; neutral; ≤ 500 chars.\n- Placement fields — Always include Link and Account placeholders; never output credentials.\n- Language — Key fields always in English.\n- Anti-execution — Never perform tasks; only produce templates.\n- Deviation handling — If asked for other behavior, state you generate task templates and proceed.\n- Help mode — Provide brief definitions only when explicitly requested.\n- Determinism — Keep labels and ordering identical across outputs.\n- Safety — Decline illegal/harmful requests neutrally; exclude unsafe content.\n- No step-level descriptions — Do not output descriptions at step level (only Task Template description).\n\n## Profession Determination — Rules (Sheets-first)\n- Evidence priority: **tool match (×3)** > **object match (×2)** > **verb match (×1)** > **domain keywords (×1)**.\n- Use **Sheets** data first:\n  - Candidate professions are those in **Professions** with `enabled = true`.\n  - Boost tools/objects/actions listed for each profession in **Tools** and **Responsibilities**.\n- Fallbacks (when Sheets are unavailable or ambiguous):\n  - test/validate/verify/create test cases/file bugs → **QA**\n  - build/integrate/implement/deploy/configure/automate backend/pipelines → **Full Stack Developer**\n  - servers/networks/firewalls/backups/monitoring → **System Administrator**\n  - prompt design/evaluation/guardrails/RAG:\n    - If **Prompt Engineer** exists in configured list → Prompt Engineer\n    - Otherwise: evaluation → **QA**; integration → **Full Stack Developer**\n  - Never assign **Chat Operator** to development, testing, or prompt-engineering tasks.\n  - Marketing/content:\n    - run/optimize ads → **Ppc Specialist**\n    - media buying/placements/budgets → **Media Buyer**\n    - social targeting → **Targetologist**\n    - SEO audit/on-page/technical/keywords/backlinks → **Seo Manager**\n    - backlink outreach → **Linkbuilder**\n    - write articles/posts/ads/scripts → **Copywriter**\n    - plan/publish content → **Content Manager** or **Social Media Manager**\n    - email campaigns → **Email Marketer**\n  - Design/media:\n    - wireframes/prototypes/UX research → **UI/UX Designer**\n    - web visuals/landing pages (no deep UX) → **Web Designer**\n    - WordPress themes/builders/plugins → **WordPress Designer**\n    - logos/branding/banners (Photoshop/Illustrator) → **Graphic Designer**\n    - vector illustration/drawing/Procreate → **Illustrator**\n    - motion graphics/After Effects → **Motion Designer**\n    - timeline editing/color/export (Premiere/DaVinci) → **Video Editor**\n    - short vertical clips/Reels/CapCut → **Mobile Video Editor**\n    - 3D modeling/rigging/rendering (Blender/3ds Max) → **3d Designer**\n    - character/keyframe animation → **Animator**\n  - Business/ops:\n    - client comm/account health → **Account Manager**\n    - events → **Event Manager**\n    - finance/budgeting → **Financial Manager**\n    - recruiting/vacancies → **Recruiter**\n    - proofreading/grammar → **Proofreader**\n    - travel → **Tourism Manager**\n    - analytics/dashboards/BI → **Analyst**\n    - mobile apps (Flutter/Swift/Kotlin) → **Mobile Developer**\n    - influencer partnerships → **Influencer Manager**\n    - public relations/press → **Pr Manager**\n- Select exactly one profession. Break ties by most tool matches, then object matches.\n\n## Operational Flow with Exit Points\n- **T0 Sync From Google Sheets (required preflight)**\n  - **Do**: Call the Google Sheets tool to load `Professions`, `Tools`, `Responsibilities`, and `Mappings`. Normalize and cache.  \n  - **Exit**: Parsed datasets available or “Sheet unavailable — KB fallback engaged”.  \n  - **Next**: T1.\n- **T1 Normalize Task Name**\n  - **Do**: Convert input to Action + Object (English, title case, plural object).  \n  - **Exit**: Name validated (present-tense verb + plural noun).  \n  - **Next**: T2.\n- **T2 Resolve Profession (Sheets-first)**\n  - **Do**: Score allowed professions using Sheets + rules above.  \n  - **Exit**: Profession selected from available list.  \n  - **If tie/low confidence**: T2b; else T3.\n- **T2b Profession Fallback**\n  - **Do**: Apply verb/domain fallbacks and prohibitions (e.g., never Chat Operator for dev/test).  \n  - **Exit**: Profession chosen from allowed list.  \n  - **Next**: T3.\n- **T3 Determine Frequency**\n  - **Do**: Infer by context; else default Weekly (Hourly = monitoring; Daily = production; Weekly = planning/review; Monthly = reporting).  \n  - **Exit**: Valid frequency set.  \n  - **Next**: T4.\n- **T4 Select Tools**\n  - **Do**: Choose concrete tools aligned with chosen profession and Sheets/KB; ensure feasibility with objects/actions.  \n  - **Exit**: Tool chosen per step candidate.  \n  - **Next**: T4a.\n- **T4a Validate Action–Tool–Object**\n  - **Do**: Ensure the action can be performed on the object with the tool; adjust/reselect if invalid.  \n  - **Exit**: Valid triple established.  \n  - **Next**: T5.\n- **T5 Build Steps**\n  - **Do**: Create ≥ 1 step; Step Name = Action + Object + Tool; assign Hours Planned in Hh:mm:ss.  \n  - **Exit**: Steps correctly named and timed.  \n  - **Next**: T6.\n- **T6 Build Checklist Items (mandatory)**\n  - **Do**: For each step, add ≥ 3 unique items; Name = unique Action + same Object + same Tool; complete Placement and Guide; Format = Text.  \n  - **Exit**: Items complete.  \n  - **Next**: T7.\n- **T7 Validate Alignment**\n  - **Do**: Check structure, time format, frequency, tool concreteness, object/tool alignment, unique item names, and required placeholders.  \n  - **If failure**: Route to T4/T5/T6 accordingly.  \n  - **Else**: T8.\n- **T8 Render Markdown**\n  - **Do**: Output final template as Markdown (no code fences), using sectioning/numbering as in Examples. No commentary.  \n  - **Exit**: Final Markdown emitted.  \n  - **Next**: End.\n\n## Acceptance Criteria\n- **Hierarchy**: Exact Project → Milestone → Task Template → Step Templates → Checklist Items; correct titles/numbering.\n- **Preflight**: Google Sheets sync attempted before generation; fallback used silently if unavailable.\n- **Task Name**: Action + Object (English, present-tense verb + plural noun, title case).\n- **Profession**: Selected from Sheets (enabled) or fallback list via scoring rules; never assign Chat Operator to dev/test/prompt-engineering.\n- **Frequency**: One of Hourly, Daily, Weekly, Monthly.\n- **Steps**: ≥ 1; Step Name = Action + Object + Tool; Hours Planned in Hh:mm:ss; Action = present-tense verb; Object = plural noun; Tool = real product.\n- **Action–Tool–Object**: Each triple is feasible and appropriate (validated).\n- **Checklists**: Each step has ≥ 3 items; each item includes:\n  - **Name** = unique Action + same Object + same Tool as the step.\n  - **Placement** = Placement Name; Placement Link [Link required]; Placement Tool = item tool; Placement Type; Placement Account [Account required].\n  - **Guide** = Guide Name (equals item name); Guide Tool (equals Placement Tool); Guide Objects (single-word plural); **Format** (Link = URL or “Not needed”; Objects = same word; Formats = Text); Guide Description ≤ 500 chars.\n- **Tools**: Specific, real names; Placement Tool equals Guide Tool everywhere.\n- **Description**: Only at Task Template level; neutral; ≤ 500 chars.\n- **Language**: All key fields in English.\n- **Output**: Markdown without code fences; no extra commentary.\n\n## Examples (structure and alignment to reproduce)\n\n### Example 1\n\n#### 1. Project  \n**Name**: Logo Development Project  \n\n---\n\n#### 2. Milestone  \n**Name**: Visual Asset Creation  \n\n---\n\n#### 3. Task Template\n\n1. **Name**: Create Images  \n2. **Description**: Design and generate high-quality images for use in logo development and branding.  \n3. **Profession**: Graphic Designer  \n4. **Frequency**: Weekly  \n5. **Step Templates**:\n\n---\n\n##### Step 1: Design Concepts Figma  \n- **Hours Planned**: 02:00:00  \n- **Action**: Design  \n- **Object**: Concepts  \n- **Tool**: Figma  \n\n###### Checklist Items:\n\n1.1 **Name**: Sketch Drafts Figma  \n- **Placement**:\n  - **Placement Name**: Concept Draft File  \n  - **Placement Link**: `[Link required]`  \n  - **Placement Tool**: Figma  \n  - **Placement Type**: Document  \n  - **Placement Account**: `[Account required]`  \n- **Guide**:\n  - **Guide Name**: Sketch Drafts Figma  \n  - **Guide Tool**: Figma  \n  - **Guide Objects**: Drafts  \n  - **Format**:\n    - **Link**: Not needed  \n    - **Objects**: Drafts  \n    - **Formats**: Text  \n  - **Guide Description**: Create rough sketches of logo design concepts using basic shapes and layout techniques.\n\n1.2 **Name**: Create Variations Figma  \n- **Placement**:\n  - **Placement Name**: Variations Board  \n  - **Placement Link**: `[Link required]`  \n  - **Placement Tool**: Figma  \n  - **Placement Type**: Document  \n  - **Placement Account**: `[Account required]`  \n- **Guide**:\n  - **Guide Name**: Create Variations Figma  \n  - **Guide Tool**: Figma  \n  - **Guide Objects**: Variations  \n  - **Format**:\n    - **Link**: Not needed  \n    - **Objects**: Variations  \n    - **Formats**: Text  \n  - **Guide Description**: Develop multiple logo versions based on selected draft to explore color, style, and typography options.\n\n1.3 **Name**: Refine Designs Figma  \n- **Placement**:\n  - **Placement Name**: Refined Logo File  \n  - **Placement Link**: `[Link required]`  \n  - **Placement Tool**: Figma  \n  - **Placement Type**: Document  \n  - **Placement Account**: `[Account required]`  \n- **Guide**:\n  - **Guide Name**: Refine Designs Figma  \n  - **Guide Tool**: Figma  \n  - **Guide Objects**: Designs  \n  - **Format**:\n    - **Link**: Not needed  \n    - **Objects**: Designs  \n    - **Formats**: Text  \n  - **Guide Description**: Polish selected logo concept by adjusting proportions, alignment, and adding final design touches.\n\n### Example 2\n\n#### 1. Project  \n**Name**: Employee Training Program  \n\n---\n\n#### 2. Milestone  \n**Name**: Onboarding Content Development  \n\n---\n\n#### 3. Task Template\n\n1. **Name**: Create Courses  \n2. **Description**: Develop structured onboarding courses to train new employees on company policies, tools, and workflows.  \n3. **Profession**: Instructional Designer  \n4. **Frequency**: Monthly  \n5. **Step Templates**:\n\n---\n\n##### Step 1: Outline Modules Google Docs  \n- **Hours Planned**: 01:30:00  \n- **Action**: Outline  \n- **Object**: Modules  \n- **Tool**: Google Docs  \n\n###### Checklist Items:\n\n1.1 **Name**: Define Topics Google Docs  \n- **Placement**:\n  - **Placement Name**: Course Outline Document  \n  - **Placement Link**: `[Link required]`  \n  - **Placement Tool**: Google Docs  \n  - **Placement Type**: Document  \n  - **Placement Account**: `[Account required]`  \n- **Guide**:\n  - **Guide Name**: Define Topics Google Docs  \n  - **Guide Tool**: Google Docs  \n  - **Guide Objects**: Topics  \n  - **Format**:\n    - **Link**: Not needed  \n    - **Objects**: Topics  \n    - **Formats**: Text  \n  - **Guide Description**: List major subject areas to include in the onboarding course, such as company culture, tools, and roles.\n\n1.2 **Name**: List Objectives Google Docs  \n- **Placement**:\n  - **Placement Name**: Objectives Section  \n  - **Placement Link**: `[Link required]`  \n  - **Placement Tool**: Google Docs  \n  - **Placement Type**: Document  \n  - **Placement Account**: `[Account required]`  \n- **Guide**:\n  - **Guide Name**: List Objectives Google Docs  \n  - **Guide Tool**: Google Docs  \n  - **Guide Objects**: Objectives  \n  - **Format**:\n    - **Link**: Not needed  \n    - **Objects**: Objectives  \n    - **Formats**: Text  \n  - **Guide Description**: Write clear learning outcomes for each module to guide content creation.\n\n1.3 **Name**: Structure Flow Google Docs  \n- **Placement**:\n  - **Placement Name**: Course Flowchart  \n  - **Placement Link**: `[Link required]`  \n  - **Placement Tool**: Google Docs  \n  - **Placement Type**: Document  \n  - **Placement Account**: `[Account required]`  \n- **Guide**:\n  - **Guide Name**: Structure Flow Google Docs  \n  - **Guide Tool**: Google Docs  \n  - **Guide Objects**: Flows  \n  - **Format**:\n    - **Link**: Not needed  \n    - **Objects**: Flows  \n    - **Formats**: Text  \n  - **Guide Description**: Organize modules and topics into a logical progression that supports learning.\n\n---\n\n##### Step 2: Build Lessons Notion  \n- **Hours Planned**: 02:00:00  \n- **Action**: Build  \n- **Object**: Lessons  \n- **Tool**: Notion  \n\n###### Checklist Items:\n\n2.1 **Name**: Create Pages Notion  \n- **Placement**:\n  - **Placement Name**: Course Workspace  \n  - **Placement Link**: `[Link required]`  \n  - **Placement Tool**: Notion  \n  - **Placement Type**: Page  \n  - **Placement Account**: `[Account required]`  \n- **Guide**:\n  - **Guide Name**: Create Pages Notion  \n  - **Guide Tool**: Notion  \n  - **Guide Objects**: Pages  \n  - **Format**:\n    - **Link**: Not needed  \n    - **Objects**: Pages  \n    - **Formats**: Text  \n  - **Guide Description**: Set up dedicated Notion pages for each lesson module, including titles and sub-sections.\n\n2.2 **Name**: Insert Content Notion  \n- **Placement**:\n  - **Placement Name**: Lesson Templates  \n  - **Placement Link**: `[Link required]`  \n  - **Placement Tool**: Notion  \n  - **Placement Type**: Page  \n  - **Placement Account**: `[Account required]`  \n- **Guide**:\n  - **Guide Name**: Insert Content Notion  \n  - **Guide Tool**: Notion  \n  - **Guide Objects**: Contents  \n  - **Format**:\n    - **Link**: Not needed  \n    - **Objects**: Contents  \n    - **Formats**: Text  \n  - **Guide Description**: Add lesson text, instructions, and visuals to each Notion page based on the course outline.\n\n2.3 **Name**: Add Quizzes Notion  \n- **Placement**:\n  - **Placement Name**: Assessment Section  \n  - **Placement Link**: `[Link required]`  \n  - **Placement Tool**: Notion  \n  - **Placement Type**: Page  \n  - **Placement Account**: `[Account required]`  \n- **Guide**:\n  - **Guide Name**: Add Quizzes Notion  \n  - **Guide Tool**: Notion  \n  - **Guide Objects**: Quizzes  \n  - **Format**:\n    - **Link**: Not needed  \n    - **Objects**: Quizzes  \n    - **Formats**: Text  \n  - **Guide Description**: Add short quizzes or checkpoints at the end of each lesson to test understanding.\n\n## Allowed Professions (fallback list used only if Sheets omit/disable roles)\n3d Designer, Account Manager, Affiliate Manager, Animator, Chat Operator, Email Marketer, Financial Manager, Interior Designer, Media Buyer, Mobile Video Editor, Personal Assistant, Ppc Specialist, Seo Manager, Social Media Manager, Targetologist, Content Manager, Copywriter, Event Manager, Graphic Designer, Illustrator, Recruiter, UI/UX Designer, Video Editor, Analyst, Full Stack Developer, Influencer Manager, Investment Manager, Linkbuilder, Mobile Developer, Motion Designer, Pr Manager, Proofreader, QA, System Administrator, Tourism Manager, Web Designer, WordPress Designer, Prompt Engineer, Instructional Designer, Project Manager, Front End Developer, Back End Developer, Lead Generation Manager.\n\n## Built-in Help (show only on explicit request)\n- **Action** — Present-tense verb (Create, Draft, Test).\n- **Object** — Plural noun (Reports, Wireframes, APIs).\n- **Tool** — Real product used to perform the action (Google Docs, Figma, Postman).\n- **Step Name** — One action + one object + one tool (e.g., Draft Lyrics Google Docs).\n- **Checklist item** — Smaller action on the same object and tool; includes Placement and Guide.\n- **Placement** — Where the result lives: name, link placeholder, tool, type, account placeholder.\n- **Guide** — How to complete the item: same tool as Placement; single-word plural label; Format set to Text with optional Link.\n- **Frequency** — Hourly, Daily, Weekly, or Monthly.\n- **Formats** — Always “Text”.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        440,
        0
      ],
      "id": "5d951208-b451-49dc-b53d-61fbe0677765",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "openai/gpt-oss-120b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        420,
        160
      ],
      "id": "e5303c0d-bccb-4368-8cd1-d28da36f0ec0",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "OEY7AoSUjSZlA7Co",
          "name": "ADMIN OpenRouter"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields').item.json.sessionId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        560,
        160
      ],
      "id": "9be44d97-bfd8-4172-94a7-66da1fb18fb8",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"sessionId\": \"test-local-16\",\n  \"userText\": \"{{ $json.body.input }}\"\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        220,
        0
      ],
      "id": "7c6c41cd-d2fa-4fde-9fb0-131970203214",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "json-generator",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -40,
        380
      ],
      "id": "b9ceb704-db38-403f-a388-2496426abefb",
      "name": "Json generator",
      "webhookId": "3acf3f48-da4a-4e9b-8f9c-1cc24762f2e9"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "task-template",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -20,
        0
      ],
      "id": "2f9a3067-43ee-4138-a9c9-879cd66d9a53",
      "name": "Template generator",
      "webhookId": "4429644e-0b6c-4c84-b732-04aa96ec8419"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": " ",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "message": "## Objects\n**Name**  \nStructures  \n**Status**  \nPending  \n**Priority**  \nPrimary  \n**Formats**  \nText  \n\n**Name**  \nErrors  \n**Status**  \nPending  \n**Priority**  \nPrimary  \n**Formats**  \nText  \n\n**Name**  \nCorrections  \n**Status**  \nPending  \n**Priority**  \nPrimary  \n**Formats**  \nText\n\n## Actions\nFix\n\n\n## Responsibilities\nFix -> Templates\n\n## Tools\n**Name**  \nMicrosoft Word  \n**Link**  \nhttp://office.microsoft.com/word  \n**Entity Block**  \nSelect all  \n\n**Name**  \nMicrosoft Excel  \n**Link**  \nhttp://office.microsoft.com/excel  \n**Entity Block**  \nSelect all  \n\n**Name**  \nGoogle Docs  \n**Link**  \nhttp://docs.google.com  \n**Entity Block**  \nSelect all\n\n## Guides\n**Name**  \nAnalyze Template Structure  \n**Tools**  \nMicrosoft Word  \n**Entities**  \nStructures  \n**Objects**  \nStructures  \n**Link**  \n[Write your link here]  \n**Object**  \nStructures  \n**Format**  \nText  \n**Description**  \nReview the current task template documents thoroughly. Ensure they adhere to the designated structure, checking naming conventions and checklist organization. This guarantees consistency across all documents.\n\n**Name**  \nIdentify Errors  \n**Tools**  \nMicrosoft Excel  \n**Entities**  \nErrors  \n**Objects**  \nErrors  \n**Link**  \n[Write your link here]  \n**Object**  \nErrors  \n**Format**  \nText  \n**Description**  \nCompile a detailed log of all errors and inconsistencies identified within the templates. Highlight specific areas where the templates deviate from the established guidelines. Ensure the log is clear and easy to follow.\n\n**Name**  \nPropose Corrections  \n**Tools**  \nGoogle Docs  \n**Entities**  \nCorrections  \n**Objects**  \nCorrections  \n**Link**  \n[Write your link here]  \n**Object**  \nCorrections  \n**Format**  \nText  \n**Description**  \nDraft a comprehensive plan to address all identified errors and inconsistencies. Outline the steps required to align the templates with the updated standards. Ensure that each step is detailed and easy to implement.\n\n## Placement types\nDocument  \nSpreadsheet\n\n## Placements\n**Placement name**  \nTask Template Document  \n**Placement link**  \n[Link required]  \n**Placement tool**  \nMicrosoft Word  \n**Placement type**  \nDocument  \n**Placement account**  \n[Account required]  \n\n**Placement name**  \nError Log Spreadsheet  \n**Placement link**  \n[Link required]  \n**Placement tool**  \nMicrosoft Excel  \n**Placement type**  \nSpreadsheet  \n**Placement account**  \n[Account required]  \n\n**Placement name**  \nCorrection Plan Document  \n**Placement link**  \n[Link required]  \n**Placement tool**  \nGoogle Docs  \n**Placement type**  \nDocument  \n**Placement account**  \n[Account required]\n\n## Checklist items\n**Checklist item**  \nAnalyze Template Structure  \n**Placement**  \nTask Template Document  \n\n**Checklist item**  \nIdentify Errors  \n**Placement**  \nError Log Spreadsheet  \n\n**Checklist item**  \nPropose Corrections  \n**Placement**  \nCorrection Plan Document\n\n## Step Templates\n**Step template name**  \nReview Existing Templates  \n**Hours Planned**  \n02:00:00  \n**Checklist items**  \nAnalyze Template Structure  \nIdentify Errors  \nPropose Corrections\n\n## Task Template\n**Name**  \nFix Task Templates  \n\n**Cost**  \n143  \n\n**Frequency**  \nMonthly  \n\n**Professions**  \nProject Manager  \n\n**StepTemplates**  \nReview Existing Templates  \nAnalyze Template Structure  \nIdentify Errors  \nPropose Corrections  \n\n**Description**  \nThis task focuses on identifying and correcting errors and inconsistencies within existing task templates. The aim is to ensure each template aligns perfectly with the updated structure and requirements. This includes checking for accurate placement details, tool usage, formatting, and guidelines adherence.\nКонвертируй в JSON, напиши JSON не в блоке кода, а непосредственно."
            },
            {
              "type": "AIMessagePromptTemplate",
              "message": "{\n  \"Objects\": [\n    {\n      \"Name\": \"Structures\",\n      \"Status\": \"Pending\",\n      \"Priority\": \"Primary\",\n      \"Formats\": \"Text\"\n    },\n    {\n      \"Name\": \"Errors\",\n      \"Status\": \"Pending\",\n      \"Priority\": \"Primary\",\n      \"Formats\": \"Text\"\n    },\n    {\n      \"Name\": \"Corrections\",\n      \"Status\": \"Pending\",\n      \"Priority\": \"Primary\",\n      \"Formats\": \"Text\"\n    }\n  ],\n  \"Actions\": {\n    \"Fix\": \"Templates\"\n  },\n  \"Tools\": [\n    {\n      \"Name\": \"Microsoft Word\",\n      \"Link\": \"http://office.microsoft.com/word\",\n      \"Entity Block\": \"Select all\"\n    },\n    {\n      \"Name\": \"Microsoft Excel\",\n      \"Link\": \"http://office.microsoft.com/excel\",\n      \"Entity Block\": \"Select all\"\n    },\n    {\n      \"Name\": \"Google Docs\",\n      \"Link\": \"http://docs.google.com\",\n      \"Entity Block\": \"Select all\"\n    }\n  ],\n  \"Guides\": [\n    {\n      \"Name\": \"Analyze Template Structure\",\n      \"Tools\": \"Microsoft Word\",\n      \"Entities\": \"Structures\",\n      \"Objects\": \"Structures\",\n      \"Link\": \"[Write your link here]\",\n      \"Object\": \"Structures\",\n      \"Format\": \"Text\",\n      \"Description\": \"Review the current task template documents thoroughly. Ensure they adhere to the designated structure, checking naming conventions and checklist organization. This guarantees consistency across all documents.\"\n    },\n    {\n      \"Name\": \"Identify Errors\",\n      \"Tools\": \"Microsoft Excel\",\n      \"Entities\": \"Errors\",\n      \"Objects\": \"Errors\",\n      \"Link\": \"[Write your link here]\",\n      \"Object\": \"Errors\",\n      \"Format\": \"Text\",\n      \"Description\": \"Compile a detailed log of all errors and inconsistencies identified within the templates. Highlight specific areas where the templates deviate from the established guidelines. Ensure the log is clear and easy to follow.\"\n    },\n    {\n      \"Name\": \"Propose Corrections\",\n      \"Tools\": \"Google Docs\",\n      \"Entities\": \"Corrections\",\n      \"Objects\": \"Corrections\",\n      \"Link\": \"[Write your link here]\",\n      \"Object\": \"Corrections\",\n      \"Format\": \"Text\",\n      \"Description\": \"Draft a comprehensive plan to address all identified errors and inconsistencies. Outline the steps required to align the templates with the updated standards. Ensure that each step is detailed and easy to implement.\"\n    }\n  ],\n  \"Placement types\": [\"Document\", \"Spreadsheet\"],\n  \"Placements\": [\n    {\n      \"Placement name\": \"Task Template Document\",\n      \"Placement link\": \"[Link required]\",\n      \"Placement tool\": \"Microsoft Word\",\n      \"Placement type\": \"Document\",\n      \"Placement account\": \"[Account required]\"\n    },\n    {\n      \"Placement name\": \"Error Log Spreadsheet\",\n      \"Placement link\": \"[Link required]\",\n      \"Placement tool\": \"Microsoft Excel\",\n      \"Placement type\": \"Spreadsheet\",\n      \"Placement account\": \"[Account required]\"\n    },\n    {\n      \"Placement name\": \"Correction Plan Document\",\n      \"Placement link\": \"[Link required]\",\n      \"Placement tool\": \"Google Docs\",\n      \"Placement type\": \"Document\",\n      \"Placement account\": \"[Account required]\"\n    }\n  ],\n  \"Checklist items\": [\n    {\n      \"Checklist item\": \"Analyze Template Structure\",\n      \"Placement\": \"Task Template Document\"\n    },\n    {\n      \"Checklist item\": \"Identify Errors\",\n      \"Placement\": \"Error Log Spreadsheet\"\n    },\n    {\n      \"Checklist item\": \"Propose Corrections\",\n      \"Placement\": \"Correction Plan Document\"\n    }\n  ],\n  \"Step Templates\": {\n    \"Step template name\": \"Review Existing Templates\",\n    \"Hours Planned\": \"02:00:00\",\n    \"Checklist items\": [\n      \"Analyze Template Structure\",\n      \"Identify Errors\",\n      \"Propose Corrections\"\n    ]\n  },\n  \"Task Template\": {\n    \"Name\": \"Fix Task Templates\",\n    \"Cost\": 143,\n    \"Frequency\": \"Monthly\",\n    \"Professions\": \"Project Manager\",\n    \"StepTemplates\": [\n      \"Review Existing Templates\",\n      \"Analyze Template Structure\",\n      \"Identify Errors\",\n      \"Propose Corrections\"\n    ],\n    \"Description\": \"This task focuses on identifying and correcting errors and inconsistencies within existing task templates. The aim is to ensure each template aligns perfectly with the updated structure and requirements. This includes checking for accurate placement details, tool usage, formatting, and guidelines adherence.\"\n  }\n}"
            },
            {
              "type": "HumanMessagePromptTemplate",
              "message": "Нет, мне надо без изменений, чтобы были в точности такие поля, как указано в примере. Ничего не менять абсолютно, а просто перевести в JSON в соответствии со структурой.   Используй следующий референс (но это только пример, ты делай по такой же структуре).    {   \"json\": {     \"Objects\": [       {         \"Name\": \"Portals\",         \"Status\": \"Pending\",         \"Priority\": \"Primary\",         \"Formats\": [           \"Text\"         ]       }     ],     \"Actions\": [       \"Search\"     ],     \"Responsibilities\": \"Search: Sites\",     \"Tools\": [       {         \"Name\": \"LinkedIn\",         \"Tool link\": \"linkedin.com\",         \"Entity Block\": \"Select all\"       }     ],     \"Guides\": [       {         \"Name\": \"Research Top Job Sites\",         \"Tools\": [           \"LinkedIn\"         ],         \"Entities\": \"Select all\",         \"Objects\": [           \"Portals\"         ],         \"Link\": \"[Write your link here]\",         \"Object\": \"Portals\",         \"Format\": \"Text\",         \"Description\": \"some Description\"       }     ],     \"PlacementTypes\": [       \"Page\"     ],     \"Placements\": [       {         \"Placement Name\": \"Research Portal Page\",         \"Placement link\": \"[Link required]\",         \"Placement tool\": \"LinkedIn\",         \"Placement type\": \"Page\",         \"Placement account\": \"[Account required]\"       }     ],     \"ChecklistItems\": [       {         \"Checklist item\": \"Research Top Job Sites\",         \"Placement\": \"Research Portal Page\"       }     ],     \"StepTemplates\": [       {         \"Step template name\": \"Identify Suitable Job Portals\",         \"Hours Planned\": \"01:00:00\",         \"Checklist items\": [           \"Research Top Job Sites\"         ]       }     ],     \"TaskTemplate\": {       \"Name\": \"Search Job Sites\",       \"Cost\": 154,       \"Frequency\": \"Daily\",       \"Professions\": [         \"job seeker\"       ],       \"StepTemplates\": [         \"Identify Suitable Job Portals\"       ],       \"Description\": \"some Description\"     }   } }"
            },
            {
              "type": "AIMessagePromptTemplate",
              "message": "{\n  \"json\": {\n    \"Objects\": [\n      {\n        \"Name\": \"Structures\",\n        \"Status\": \"Pending\",\n        \"Priority\": \"Primary\",\n        \"Formats\": [\n          \"Text\"\n        ]\n      },\n      {\n        \"Name\": \"Errors\",\n        \"Status\": \"Pending\",\n        \"Priority\": \"Primary\",\n        \"Formats\": [\n          \"Text\"\n        ]\n      },\n      {\n        \"Name\": \"Corrections\",\n        \"Status\": \"Pending\",\n        \"Priority\": \"Primary\",\n        \"Formats\": [\n          \"Text\"\n        ]\n      }\n    ],\n    \"Actions\": [\n      \"Fix\"\n    ],\n    \"Responsibilities\": \"Fix: Templates\",\n    \"Tools\": [\n      {\n        \"Name\": \"Microsoft Word\",\n        \"Link\": \"http://office.microsoft.com/word\",\n        \"Entity Block\": \"Select all\"\n      },\n      {\n        \"Name\": \"Microsoft Excel\",\n        \"Link\": \"http://office.microsoft.com/excel\",\n        \"Entity Block\": \"Select all\"\n      },\n      {\n        \"Name\": \"Google Docs\",\n        \"Link\": \"http://docs.google.com\",\n        \"Entity Block\": \"Select all\"\n      }\n    ],\n    \"Guides\": [\n      {\n        \"Name\": \"Analyze Template Structure\",\n        \"Tools\": [\n          \"Microsoft Word\"\n        ],\n        \"Entities\": \"Structures\",\n        \"Objects\": [\n          \"Structures\"\n        ],\n        \"Link\": \"[Write your link here]\",\n        \"Object\": \"Structures\",\n        \"Format\": \"Text\",\n        \"Description\": \"Review the current task template documents thoroughly. Ensure they adhere to the designated structure, checking naming conventions and checklist organization. This guarantees consistency across all documents.\"\n      },\n      {\n        \"Name\": \"Identify Errors\",\n        \"Tools\": [\n          \"Microsoft Excel\"\n        ],\n        \"Entities\": \"Errors\",\n        \"Objects\": [\n          \"Errors\"\n        ],\n        \"Link\": \"[Write your link here]\",\n        \"Object\": \"Errors\",\n        \"Format\": \"Text\",\n        \"Description\": \"Compile a detailed log of all errors and inconsistencies identified within the templates. Highlight specific areas where the templates deviate from the established guidelines. Ensure the log is clear and easy to follow.\"\n      },\n      {\n        \"Name\": \"Propose Corrections\",\n        \"Tools\": [\n          \"Google Docs\"\n        ],\n        \"Entities\": \"Corrections\",\n        \"Objects\": [\n          \"Corrections\"\n        ],\n        \"Link\": \"[Write your link here]\",\n        \"Object\": \"Corrections\",\n        \"Format\": \"Text\",\n        \"Description\": \"Draft a comprehensive plan to address all identified errors and inconsistencies. Outline the steps required to align the templates with the updated standards. Ensure that each step is detailed and easy to implement.\"\n      }\n    ],\n    \"PlacementTypes\": [\n      \"Document\",\n      \"Spreadsheet\"\n    ],\n    \"Placements\": [\n      {\n        \"Placement name\": \"Task Template Document\",\n        \"Placement link\": \"[Link required]\",\n        \"Placement tool\": \"Microsoft Word\",\n        \"Placement type\": \"Document\",\n        \"Placement account\": \"[Account required]\"\n      },\n      {\n        \"Placement name\": \"Error Log Spreadsheet\",\n        \"Placement link\": \"[Link required]\",\n        \"Placement tool\": \"Microsoft Excel\",\n        \"Placement type\": \"Spreadsheet\",\n        \"Placement account\": \"[Account required]\"\n      },\n      {\n        \"Placement name\": \"Correction Plan Document\",\n        \"Placement link\": \"[Link required]\",\n        \"Placement tool\": \"Google Docs\",\n        \"Placement type\": \"Document\",\n        \"Placement account\": \"[Account required]\"\n      }\n    ],\n    \"ChecklistItems\": [\n      {\n        \"Checklist item\": \"Analyze Template Structure\",\n        \"Placement\": \"Task Template Document\"\n      },\n      {\n        \"Checklist item\": \"Identify Errors\",\n        \"Placement\": \"Error Log Spreadsheet\"\n      },\n      {\n        \"Checklist item\": \"Propose Corrections\",\n        \"Placement\": \"Correction Plan Document\"\n      }\n    ],\n    \"StepTemplates\": [\n      {\n        \"Step template name\": \"Review Existing Templates\",\n        \"Hours Planned\": \"02:00:00\",\n        \"Checklist items\": [\n          \"Analyze Template Structure\",\n          \"Identify Errors\",\n          \"Propose Corrections\"\n        ]\n      }\n    ],\n    \"TaskTemplate\": {\n      \"Name\": \"Fix Task Templates\",\n      \"Cost\": 143,\n      \"Frequency\": \"Monthly\",\n      \"Professions\": [\n        \"Project Manager\"\n      ],\n      \"StepTemplates\": [\n        \"Review Existing Templates\",\n        \"Analyze Template Structure\",\n        \"Identify Errors\",\n        \"Propose Corrections\"\n      ],\n      \"Description\": \"This task focuses on identifying and correcting errors and inconsistencies within existing task templates. The aim is to ensure each template aligns perfectly with the updated structure and requirements. This includes checking for accurate placement details, tool usage, formatting, and guidelines adherence.\"\n    }\n  }\n}"
            },
            {
              "type": "HumanMessagePromptTemplate",
              "message": "\"Responsibilities\": [\n        {\n            \"Fix\": \"Templates\"\n        }\n    ],\n\nResponsibilities повинні бути так\n\n\nне link, а Tool link там де тулзи"
            },
            {
              "type": "HumanMessagePromptTemplate",
              "message": "Це нормально, дякую. Готовий до наступного завдання? Тільки не пиши нічого, крім результата. І не потрібно це упаковувати в формат коду. Видавай тільки JSON, нічого більше."
            },
            {
              "type": "AIMessagePromptTemplate",
              "message": "Звісно, я готовий допомогти! Яке ваше наступне завдання? Поверну результат не у вигляді коду, а просто текстом.   враховуй те, що поля потрібно писати саме так, як вказано вище. Тобто, наприклад, не можзна писати Placement Name, потрібно Placement name. Суворо дотримуйся правил регістру. "
            },
            {
              "type": "HumanMessagePromptTemplate",
              "message": " I generate task templates. Below is the template for the original task name **Sing Songs**.    #### 1. Project   **Name**: Song Production Project    ---  #### 2. Milestone   **Name**: Vocal Recording    ---  #### 3. Task Template    1. **Name**: Sing Songs   2. **Description**: Perform vocal recordings of the song’s lyrics, delivering clear articulation, appropriate pitch, and emotional expression suitable for the intended musical style.   3. **Profession**: Songwriter   4. **Frequency**: Weekly   5. **Step Templates**:    ---  ##### Step 1: Warm‑up Vocals Audacity   - **Hours Planned**: 00:30:00   - **Action**: Warm‑up   - **Object**: Vocals   - **Tool**: Audacity    ###### Checklist Items    1.1 **Name**: Practice Scales Audacity   - **Placement**:     - **Placement Name**: Warm‑up Session File     - **Placement Link**: `[Link required]`     - **Placement Tool**: Audacity     - **Placement Type**: Audio File     - **Placement Account**: `[Account required]`   - **Guide**:     - **Guide Name**: Practice Scales Audacity     - **Guide Tool**: Audacity     - **Guide Objects**: Scales     - **Format**:       - **Link**: Not needed       - **Objects**: Scales       - **Formats**: Text     - **Guide Description**: Sing through major and minor scales to prepare vocal cords and ensure pitch accuracy.    1.2 **Name**: Run Breathing Exercises Audacity   - **Placement**:     - **Placement Name**: Breathing Exercise Track     - **Placement Link**: `[Link required]`     - **Placement Tool**: Audacity     - **Placement Type**: Audio File     - **Placement Account**: `[Account required]`   - **Guide**:     - **Guide Name**: Run Breathing Exercises Audacity     - **Guide Tool**: Audacity     - **Guide Objects**: Exercises     - **Format**:       - **Link**: Not needed       - **Objects**: Exercises       - **Formats**: Text     - **Guide Description**: Perform controlled breathing drills to improve breath support for sustained singing.    1.3 **Name**: Record Warm‑up Takes Audacity   - **Placement**:     - **Placement Name**: Warm‑up Takes File     - **Placement Link**: `[Link required]`     - **Placement Tool**: Audacity     - **Placement Type**: Audio File     - **Placement Account**: `[Account required]`   - **Guide**:     - **Guide Name**: Record Warm‑up Takes Audacity     - **Guide Tool**: Audacity     - **Guide Objects**: Takes     - **Format**:       - **Link**: Not needed       - **Objects**: Takes       - **Formats**: Text     - **Guide Description**: Capture short vocal warm‑up recordings to evaluate readiness before the main session.    ---  ##### Step 2: Record Main Vocals Audacity   - **Hours Planned**: 02:00:00   - **Action**: Record   - **Object**: Vocals   - **Tool**: Audacity    ###### Checklist Items    2.1 **Name**: Capture Verse Takes Audacity   - **Placement**:     - **Placement Name**: Verse Recordings     - **Placement Link**: `[Link required]`     - **Placement Tool**: Audacity     - **Placement Type**: Audio File     - **Placement Account**: `[Account required]`   - **Guide**:     - **Guide Name**: Capture Verse Takes Audacity     - **Guide Tool**: Audacity     - **Guide Objects**: Takes     - **Format**:       - **Link**: Not needed       - **Objects**: Takes       - **Formats**: Text     - **Guide Description**: Record each verse with consistent tone, timing, and emotional delivery.    2.2 **Name**: Capture Chorus Takes Audacity   - **Placement**:     - **Placement Name**: Chorus Recordings     - **Placement Link**: `[Link required]`     - **Placement Tool**: Audacity     - **Placement Type**: Audio File     - **Placement Account**: `[Account required]`   - **Guide**:     - **Guide Name**: Capture Chorus Takes Audacity     - **Guide Tool**: Audacity     - **Guide Objects**: Takes     - **Format**:       - **Link**: Not needed       - **Objects**: Takes       - **Formats**: Text     - **Guide Description**: Record the chorus, emphasizing dynamics and catchiness for impact.    2.3 **Name**: Perform Backing‑track Sync Audacity   - **Placement**:     - **Placement Name**: Sync Session File     - - **Placement Link**: `[Link required]`     - **Placement Tool**: Audacity     - **Placement Type**: Audio File     - **Placement Account**: `[Account required]`   - **Guide**:     - **Guide Name**: Perform Backing‑track Sync Audacity     - **Guide Tool**: Audacity     - **Guide Objects**: Syncs     - **Format**:       - **Link**: Not needed       - **Objects**: Syncs       - **Formats**: Text     - **Guide Description**: Align vocal recordings with the instrumental backing track to ensure timing accuracy.  "
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        180,
        380
      ],
      "id": "fa0e0ca2-aef6-4c56-b014-d6a6e462d932",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": "openai/gpt-oss-120b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        180,
        600
      ],
      "id": "bdd0f233-7046-4021-9ee2-2f22fffa6a3c",
      "name": "OpenRouter Chat Model1",
      "credentials": {
        "openRouterApi": {
          "id": "OEY7AoSUjSZlA7Co",
          "name": "ADMIN OpenRouter"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"Objects\": [\n    {\n      \"Name\": \"Structures\",\n      \"Status\": \"Pending\",\n      \"Priority\": \"Primary\",\n      \"Formats\": [\"Text\"]\n    },\n    {\n      \"Name\": \"Errors\",\n      \"Status\": \"Pending\",\n      \"Priority\": \"Primary\",\n      \"Formats\": [\"Text\"]\n    },\n    {\n      \"Name\": \"Corrections\",\n      \"Status\": \"Pending\",\n      \"Priority\": \"Primary\",\n      \"Formats\": [\"Text\"]\n    }\n  ],\n  \"Actions\": [\"Fix\"],\n  \"Responsibilities\": [\n    {\n      \"Fix\": \"Templates\"\n    }\n  ],\n  \"Tools\": [\n    {\n      \"Name\": \"Microsoft Word\",\n      \"Tool link\": \"http://office.microsoft.com/word\",\n      \"Entity Block\": \"Select all\"\n    },\n    {\n      \"Name\": \"Microsoft Excel\",\n      \"Tool link\": \"http://office.microsoft.com/excel\",\n      \"Entity Block\": \"Select all\"\n    },\n    {\n      \"Name\": \"Google Docs\",\n      \"Tool link\": \"http://docs.google.com\",\n      \"Entity Block\": \"Select all\"\n    }\n  ],\n  \"Guides\": [\n    {\n      \"Name\": \"Analyze Template Structure\",\n      \"Tools\": [\"Microsoft Word\"],\n      \"Entities\": \"Structures\",\n      \"Objects\": [\"Structures\"],\n      \"Link\": \"[Write your link here]\",\n      \"Object\": \"Structures\",\n      \"Format\": \"Text\",\n      \"Description\": \"Review the current task template documents thoroughly. Ensure they adhere to the designated structure, checking naming conventions and checklist organization. This guarantees consistency across all documents.\"\n    },\n    {\n      \"Name\": \"Identify Errors\",\n      \"Tools\": [\"Microsoft Excel\"],\n      \"Entities\": \"Errors\",\n      \"Objects\": [\"Errors\"],\n      \"Link\": \"[Write your link here]\",\n      \"Object\": \"Errors\",\n      \"Format\": \"Text\",\n      \"Description\": \"Compile a detailed log of all errors and inconsistencies identified within the templates. Highlight specific areas where the templates deviate from the established guidelines. Ensure the log is clear and easy to follow.\"\n    },\n    {\n      \"Name\": \"Propose Corrections\",\n      \"Tools\": [\"Google Docs\"],\n      \"Entities\": \"Corrections\",\n      \"Objects\": [\"Corrections\"],\n      \"Link\": \"[Write your link here]\",\n      \"Object\": \"Corrections\",\n      \"Format\": \"Text\",\n      \"Description\": \"Draft a comprehensive plan to address all identified errors and inconsistencies. Outline the steps required to align the templates with the updated standards. Ensure that each step is detailed and easy to implement.\"\n    }\n  ],\n  \"PlacementTypes\": [\"Document\", \"Spreadsheet\"],\n  \"Placements\": [\n    {\n      \"Placement name\": \"Task Template Document\",\n      \"Placement link\": \"[Link required]\",\n      \"Placement tool\": \"Microsoft Word\",\n      \"Placement type\": \"Document\",\n      \"Placement account\": \"[Account required]\"\n    },\n    {\n      \"Placement name\": \"Error Log Spreadsheet\",\n      \"Placement link\": \"[Link required]\",\n      \"Placement tool\": \"Microsoft Excel\",\n      \"Placement type\": \"Spreadsheet\",\n      \"Placement account\": \"[Account required]\"\n    },\n    {\n      \"Placement name\": \"Correction Plan Document\",\n      \"Placement link\": \"[Link required]\",\n      \"Placement tool\": \"Google Docs\",\n      \"Placement type\": \"Document\",\n      \"Placement account\": \"[Account required]\"\n    }\n  ],\n  \"ChecklistItems\": [\n    {\n      \"Checklist item\": \"Analyze Template Structure\",\n      \"Placement\": \"Task Template Document\"\n    },\n    {\n      \"Checklist item\": \"Identify Errors\",\n      \"Placement\": \"Error Log Spreadsheet\"\n    },\n    {\n      \"Checklist item\": \"Propose Corrections\",\n      \"Placement\": \"Correction Plan Document\"\n    }\n  ],\n  \"StepTemplates\": [\n    {\n      \"Step template name\": \"Review Existing Templates\",\n      \"Hours Planned\": \"02:00:00\",\n      \"Checklist items\": [\n        \"Analyze Template Structure\",\n        \"Identify Errors\",\n        \"Propose Corrections\"\n      ]\n    },\n    {\n      \"Step template name\": \"Analyze Template Structure\",\n      \"Hours Planned\": \"00:45:00\",\n      \"Checklist items\": [\"Analyze Template Structure\"]\n    },\n    {\n      \"Step template name\": \"Identify Errors\",\n      \"Hours Planned\": \"01:00:00\",\n      \"Checklist items\": [\"Identify Errors\"]\n    },\n    {\n      \"Step template name\": \"Propose Corrections\",\n      \"Hours Planned\": \"01:15:00\",\n      \"Checklist items\": [\"Propose Corrections\"]\n    }\n  ],\n  \"TaskTemplate\": {\n    \"Name\": \"Fix Task Templates\",\n    \"Cost\": 143,\n    \"Frequency\": \"Monthly\",\n    \"Professions\": [\"Project Manager\"],\n    \"StepTemplates\": [\n      \"Review Existing Templates\",\n      \"Analyze Template Structure\",\n      \"Identify Errors\",\n      \"Propose Corrections\"\n    ],\n    \"Description\": \"This task focuses on identifying and correcting errors and inconsistencies within existing task templates. The aim is to ensure each template aligns perfectly with the updated structure and requirements. This includes checking for accurate placement details, tool usage, formatting, and guidelines adherence.\"\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        340,
        600
      ],
      "id": "95af9983-9e82-470c-9c0e-d88a6fc56a0c",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        560,
        380
      ],
      "id": "abcc5733-961c-47f7-87be-b98fadaa40a6",
      "name": "Respond to Webhook1"
    }
  ],
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Template generator": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Json generator": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "ad6812a8-b4dd-469b-9668-7ebb7e90c805",
  "triggerCount": 2,
  "tags": []
}