{
  "createdAt": "2025-06-11T08:27:50.162Z",
  "updatedAt": "2025-06-11T08:27:54.769Z",
  "id": "f7wHsmwKLrMka5bP",
  "name": "AppTest-WhatOnboardingIs",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "path": "PromptEngineering/Tests/WhatPromptingIs",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -60,
        -60
      ],
      "id": "2e3fe378-f2fd-4efe-9c53-e3ac00238861",
      "name": "Webhook",
      "webhookId": "768881d7-2df0-4de4-a080-162b479c6857"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <link type=\"image/png\" sizes=\"16x16\" rel=\"icon\" href=\"https://i.postimg.cc/gJf9MgWR/icons8-32.png\">\n  <meta charset=\"UTF-8\">\n  <title>What prompting is</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    :root {\n      --deep-blue: #081E2F;\n      --primary-yellow: #FCB305;\n      --red: #D32F2F;\n      --red-hover: #C62828;\n      --green: #2E7D32;\n      --green-hover: #1B5E20;\n      --blue: #197502;\n      --blue-dark: #1555C0;\n      --blue-light: #4245F5;\n    }\n    body {\n      font-family: 'Open Sans', sans-serif;\n      background: #F8F9FA;\n      padding: 2rem;\n      max-width: 800px;\n      margin: 0 auto;\n      min-height: 100vh;\n    }\n    #titlePage {\n      text-align: center;\n      padding: 3rem 1rem;\n    }\n    #titlePage h1 {\n      font-size: 32px;\n      color: var(--deep-blue);\n      margin-bottom: 1.5rem;\n    }\n    .quiz-info {\n      background: white;\n      padding: 2rem;\n      border-radius: 12px;\n      box-shadow: 0 4px 12px rgba(8, 30, 47, 0.1);\n      margin: 2rem auto;\n      max-width: 500px;\n    }\n    .info-item {\n      font-size: 16px;\n      color: #4A4A4A;\n      margin: 1rem 0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    #timer {\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: var(--green);\n      color: white;\n      padding: 8px 16px;\n      border-radius: 20px;\n      font-weight: 600;\n      box-shadow: 0 2px 6px rgba(46,125,50,0.2);\n    }\n    .hidden {\n      display: none;\n    }\n    .question {\n      background: white;\n      border-radius: 8px;\n      padding: 1.5rem;\n      margin-bottom: 1.5rem;\n      box-shadow: 0 2px 8px rgba(8, 30, 47, 0.1);\n      transition: all 0.3s ease;\n    }\n    .question h3 {\n      font-size: 16px;\n      font-weight: 600;\n      color: var(--deep-blue);\n      margin: 0 0 1rem 0;\n    }\n    label {\n      display: block;\n      margin: 0.5rem 0;\n      padding: 0.75rem;\n      border-radius: 4px;\n      font-size: 14px;\n      color: #4A4A4A;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n    label:hover {\n      background: rgba(25, 118, 210, 0.04);\n    }\n    /* Radio buttons (single-answer) */\n    input[type=\"radio\"] {\n      margin-right: 0.75rem;\n      accent-color: var(--green);\n      border-radius: 50%;\n      width: 16px;\n      height: 16px;\n    }\n    input[type=\"text\"],\n    input[type=\"number\"] {\n      padding: 0.5rem;\n      border: 1px solid #DEE2E6;\n      border-radius: 4px;\n      font-size: 14px;\n      width: 100%;\n      box-sizing: border-box;\n    }\n    /* Заменяем заблокированное поле профессии на выпадающий список */\n    select {\n      width: 100%;\n      padding: 0.5rem;\n      border: 1px solid #DEE2E6;\n      border-radius: 4px;\n      font-size: 14px;\n      background: white;\n      box-sizing: border-box;\n    }\n    button {\n      background: var(--green);\n      color: white;\n      border: none;\n      padding: 12px 24px;\n      border-radius: 6px;\n      font-weight: 700;\n      font-size: 15px;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      display: block;\n      margin: 2rem auto 0;\n      letter-spacing: 0.5px;\n    }\n    button:hover {\n      background: var(--green-hover);\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px rgba(46,125,50,0.3);\n    }\n    #result {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      text-align: center;\n      margin-top: 2rem;\n      box-shadow: 0 2px 8px rgba(8, 30, 47, 0.1);\n    }\n    .correct {\n      border-left: 4px solid var(--green);\n      background: #F0F9FF;\n    }\n    .incorrect {\n      border-left: 4px solid var(--red);\n    }\n    .correct-answer {\n      background: #E8F5E9 !important;\n      border: 1px solid var(--green);\n      border-radius: 4px;\n      padding: 2px 4px;\n      margin-top: 0.5rem;\n      display: inline-block;\n    }\n    @media (max-width: 600px) {\n      body {\n        padding: 1rem;\n      }\n      .question {\n        padding: 1rem;\n      }\n      button {\n        width: 100%;\n        padding: 14px 20px;\n      }\n      #timer {\n        top: 10px;\n        right: 10px;\n        font-size: 14px;\n      }\n    }\n  </style>\n</head>\n<body>\n  <!-- Title Page -->\n  <div id=\"titlePage\">\n    <h1>What prompting is</h1>\n    <div class=\"quiz-info\">\n      <div class=\"info-item\">\n        <span>Questions:</span>\n        <strong>15</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Time Limit:</span>\n        <strong>5 minutes</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Passing Score:</span>\n        <strong>80%</strong>\n      </div>\n      <button id=\"startExamBtn\">Start Exam</button>\n    </div>\n  </div>\n\n  <!-- Quiz Container -->\n  <div id=\"quizContainer\" class=\"hidden\">\n    <div id=\"timer\">00:00</div>\n    <h1>What prompting is</h1>\n    <form id=\"examForm\">\n      <!-- User Data Block (не оценивается) -->\n      <div class=\"question\" data-points=\"0\">\n        <h3>Enter Your Information</h3>\n        <label>\n          Your Name:\n          <input type=\"text\" name=\"fullName\" placeholder=\"e.g., John Doe\">\n        </label>\n        <label>\n          Your Profession:\n          <select name=\"profession\">\n            <option value=\"\">Select your profession</option>\n            <option value=\"3d designer\">3D Designer</option>\n            <option value=\"account manager\">Account Manager</option>\n            <option value=\"affiliate manager\">Affiliate Manager</option>\n            <option value=\"analyst\">Analyst</option>\n            <option value=\"animator\">Animator</option>\n            <option value=\"back end developer\">Back End Developer</option>\n            <option value=\"chat operator\">Chat Operator</option>\n            <option value=\"content manager\">Content Manager</option>\n            <option value=\"copywriter\">Copywriter</option>\n            <option value=\"email marketer\">Email Marketer</option>\n            <option value=\"event manager\">Event Manager</option>\n            <option value=\"financial manager\">Financial Manager</option>\n            <option value=\"front end developer\">Front End Developer</option>\n            <option value=\"full stack developer\">Full Stack Developer</option>\n            <option value=\"graphic designer\">Graphic Designer</option>\n            <option value=\"hr manager\">HR Manager</option>\n            <option value=\"illustrator\">Illustrator</option>\n            <option value=\"influencer manager\">Influencer Manager</option>\n            <option value=\"interior designer\">Interior Designer</option>\n            <option value=\"investment manager\">Investment Manager</option>\n            <option value=\"lead generator\">Lead Generator</option>\n            <option value=\"linkbuilder\">Linkbuilder</option>\n            <option value=\"media buyer\">Media Buyer</option>\n            <option value=\"mobile developer\">Mobile Developer</option>\n            <option value=\"mobile video editor\">Mobile Video Editor</option>\n            <option value=\"motion designer\">Motion Designer</option>\n            <option value=\"personal assistant\">Personal Assistant</option>\n            <option value=\"ppc specialist\">PPC Specialist</option>\n            <option value=\"pr manager\">PR Manager</option>\n            <option value=\"project manager\">Project Manager</option>\n            <option value=\"proofreader\">Proofreader</option>\n            <option value=\"qa\">QA</option>\n            <option value=\"recruiter\">Recruiter</option>\n            <option value=\"sales manager\">Sales Manager</option>\n            <option value=\"seo manager\">SEO Manager</option>\n            <option value=\"social media manager\">Social Media Manager</option>\n            <option value=\"system administrator\">System Administrator</option>\n            <option value=\"targetologist\">Targetologist</option>\n            <option value=\"tourism manager\">Tourism Manager</option>\n            <option value=\"ui/ux designer\">UI/UX Designer</option>\n            <option value=\"video editor\">Video Editor</option>\n            <option value=\"web designer\">Web Designer</option>\n            <option value=\"wordpress designer\">WordPress Designer</option>\n          </select>\n        </label>\n        <label>\n          Your Recruiter:\n          <select name=\"recruiter\">\n            <option value=\"Anastasia Fadeeva\">Anastasia Fadeeva</option>\n            <option value=\"Elena Ermakova\">Elena Ermakova</option>\n            <option value=\"Anna Aleksandrova\">Anna Aleksandrova</option>\n            <option value=\"Sabina Gasanova\">Sabina Gasanova</option>\n          </select>\n        </label>\n      </div>\n      \n      <!-- Вопросы -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 1: Which of the following is a fundamental principle of effective prompting?</h3>\n        <label><input type=\"radio\" name=\"q1\" value=\"A\"> A) Using technical jargon</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"B\"> B) Ensuring prompts are ambiguous</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"C\" data-correct=\"true\"> C) Providing clear and specific instructions</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"D\"> D) Avoiding any context</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 2: What is an example of \"setting context\" in a prompt?</h3>\n        <label><input type=\"radio\" name=\"q2\" value=\"A\"> A) Asking a general question without details</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"B\"> B) Requesting a response in bullet points</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"C\" data-correct=\"true\"> C) Specifying the audience and desired tone</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"D\"> D) Keeping the prompt as short as possible</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 3: Why is specificity important in prompting?</h3>\n        <label><input type=\"radio\" name=\"q3\" value=\"A\"> A) It limits the AI's creativity</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"B\" data-correct=\"true\"> B) It helps the AI generate more relevant responses</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"C\"> C) It reduces the need for user input</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"D\"> D) It ensures all answers are technically accurate</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 4: Which principle emphasizes structuring prompts to guide the AI step-by-step?</h3>\n        <label><input type=\"radio\" name=\"q4\" value=\"A\" data-correct=\"true\"> A) Using multiple sentences</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"B\"> B) Starting with a question mark</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"C\"> C) Including irrelevant details</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"D\"> D) Utilizing all capital letters</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 5: How does rephrasing a prompt affect AI responses?</h3>\n        <label><input type=\"radio\" name=\"q5\" value=\"A\"> A) It has no impact</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"B\" data-correct=\"true\"> B) It can significantly alter the output</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"C\"> C) It only affects the response length</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"D\"> D) It makes the AI slower to respond</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 6: Which prompt is more likely to yield a detailed explanation?</h3>\n        <label><input type=\"radio\" name=\"q6\" value=\"A\"> A) \"What is AI?\"</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"B\" data-correct=\"true\"> B) \"Explain AI in 500 words with examples.\"</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"C\"> C) \"Is AI good?\"</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"D\"> D) \"AI overview.\"</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 7: What effect does ambiguity in a prompt typically have?</h3>\n        <label><input type=\"radio\" name=\"q7\" value=\"A\"> A) Produces concise answers</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"B\" data-correct=\"true\"> B) Results in varied interpretations</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"C\"> C) Ensures accurate responses</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"D\"> D) Speeds up processing time</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 8: Asking an open-ended question vs. a yes/no question:</h3>\n        <label><input type=\"radio\" name=\"q8\" value=\"A\"> A) Reduces response time</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"B\" data-correct=\"true\"> B) Encourages creative or elaborate answers</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"C\"> C) Narrows the focus of the answer</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"D\"> D) Increases factual accuracy</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 9: Which approach involves providing example responses in the prompt?</h3>\n        <label><input type=\"radio\" name=\"q9\" value=\"A\"> A) Zero-shot learning</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"B\" data-correct=\"true\"> B) Few-shot learning</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"C\"> C) Role-based prompting</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"D\"> D) Iterative refining</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 10: What is a key feature of role-based prompting?</h3>\n        <label><input type=\"radio\" name=\"q10\" value=\"A\"> A) Providing step-by-step instructions</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"B\" data-correct=\"true\"> B) Asking the AI to act as an expert</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"C\"> C) Including statistical data</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"D\"> D) Using technical terminology</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 11: What does iterative prompting involve?</h3>\n        <label><input type=\"radio\" name=\"q11\" value=\"A\"> A) Asking the same question repeatedly</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"B\" data-correct=\"true\"> B) Refining the prompt based on previous outputs</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"C\"> C) Starting with a very broad question</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"D\"> D) Combining multiple questions into one</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 12: Which approach allows the AI to generate a response without examples?</h3>\n        <label><input type=\"radio\" name=\"q12\" value=\"A\"> A) Few-shot learning</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"B\" data-correct=\"true\"> B) Zero-shot learning</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"C\"> C) Contextual priming</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"D\"> D) Directive prompting</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 13: Which is a limitation of prompting?</h3>\n        <label><input type=\"radio\" name=\"q13\" value=\"A\"> A) Requires internet access</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"B\" data-correct=\"true\"> B) Can't access information beyond the AI's training data</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"C\"> C) Always produces biased responses</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"D\"> D) Requires programming skills</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 14: Skilled prompting can enable AI to:</h3>\n        <label><input type=\"radio\" name=\"q14\" value=\"A\"> A) Predict stock markets accurately</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"B\" data-correct=\"true\"> B) Mimic creative writing styles</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"C\"> C) Solve unscientific problems</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"D\"> D) Replace human judgment entirely</label>\n      </div>\n      \n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 15: Why can't perfect prompts overcome all AI limitations?</h3>\n        <label><input type=\"radio\" name=\"q15\" value=\"A\"> A) AI's training data is static and not updated in real-time</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"B\"> B) AI lacks computational power</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"C\"> C) Users often make typos</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"D\" data-correct=\"true\"> D) Prompts are inherently biased</label>\n      </div>\n\n      <button id=\"submitBtn\" type=\"button\" onclick=\"calculateScore()\">Submit Exam</button>\n    </form>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    // Функция перемешивания оставлена, но не вызывается, чтобы сохранить порядок вопросов\n    function shuffle(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      return array;\n    }\n\n    let timer;\n    let seconds = 0;\n    const timeLimit = 300; // 5 минут\n    // examName установлен как \"What prompting is\"\n    const examName = \"What prompting is\";\n\n    function startQuiz() {\n      document.getElementById('titlePage').classList.add('hidden');\n      document.getElementById('quizContainer').classList.remove('hidden');\n      // randomizeAnswers();  <!-- Не вызываем, чтобы сохранить порядок вопросов -->\n      startTimer();\n    }\n\n    function startTimer() {\n      timer = setInterval(() => {\n        seconds++;\n        const minutes = Math.floor(seconds / 60);\n        const rem = seconds % 60;\n        document.getElementById('timer').textContent =\n          String(minutes).padStart(2, '0') + \":\" + String(rem).padStart(2, '0');\n        if (seconds >= timeLimit) {\n          clearInterval(timer);\n          calculateScore(true);\n        }\n      }, 1000);\n    }\n\n    // Форматирование даты в \"dd.mm.yyyy hh:mm\"\n    function formatDate(date) {\n      const options = {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false\n      };\n      const formatted = date.toLocaleString(\"en-GB\", options);\n      return formatted.replace(/\\//g, \".\").replace(\", \", \" \");\n    }\n\n    function calculateScore(timeout = false) {\n      const submitButton = document.getElementById('submitBtn');\n      if (submitButton) {\n        submitButton.style.display = 'none';\n      }\n      clearInterval(timer);\n      let totalPoints = 0;\n      let maxPoints = 0;\n      const questions = document.querySelectorAll('.question');\n      questions.forEach(question => {\n        const points = parseInt(question.dataset.points) || 1;\n        maxPoints += points;\n        if (points === 0) return; // Пропускаем блок с информацией о пользователе\n        let correct = true;\n        const inputs = question.querySelectorAll('input');\n        let selectedValues = [];\n        let correctValues = [];\n        inputs.forEach(inp => {\n          if (inp.checked) selectedValues.push(inp.value);\n          if (inp.dataset.correct === \"true\") correctValues.push(inp.value);\n        });\n        if (\n          selectedValues.length !== correctValues.length ||\n          !selectedValues.every(val => correctValues.includes(val))\n        ) {\n          correct = false;\n        }\n        if (correct) {\n          totalPoints += points;\n          question.classList.add('correct');\n        } else {\n          question.classList.add('incorrect');\n          inputs.forEach(inp => {\n            if (inp.dataset.correct === \"true\") {\n              inp.parentElement.classList.add('correct-answer');\n            }\n          });\n        }\n      });\n      const percentage = ((totalPoints / maxPoints) * 100).toFixed(1);\n      const timeUsed = `${Math.floor(seconds / 60)}m ${seconds % 60}s`;\n      let resultsHTML = `\n        <h3>Exam Results</h3>\n        <p>Your score: ${totalPoints} / ${maxPoints} (${percentage}%)</p>\n        <p>Time used: ${timeUsed}</p>\n        ${percentage >= 80 ? \"Congratulations! You passed!\" : \"Try again! Review your mistakes below.\"}\n        ${timeout ? \"<p class='warning'>Time limit exceeded!</p>\" : \"\"}\n      `;\n      resultsHTML += `\n        <button type=\"button\" onclick=\"location.reload()\">Retry</button>\n        <button type=\"button\" onclick=\"window.location.href='https://hook.eu1.make.com/lnpdl8kfsfduaaa8r46ic6odtic1b27j'\">Read Again</button>\n        <button type=\"button\" id=\"taskButton\" onclick=\"loadTask()\">Task</button>\n      `;\n      document.getElementById('result').innerHTML = resultsHTML;\n\n      const fullName = document.querySelector('[name=\"fullName\"]')?.value.trim() || \"\";\n      const profession = document.querySelector('[name=\"profession\"]')?.value.trim() || \"\";\n      const recruiter = document.querySelector('[name=\"recruiter\"]')?.value.trim() || \"\";\n      const postData = {\n        fullName,\n        profession,\n        recruiter,\n        day: \"1\",\n        examName,\n        scoreObtained: totalPoints,\n        scoreTotal: maxPoints,\n        timeUsed: seconds,\n        timeTotal: timeLimit,\n        date: formatDate(new Date())\n      };\n\n      fetch(\"https://auto.crm-s.com/webhook/Onboarding/Update\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(postData)\n      })\n      .then(res => res.text())\n      .then(data => console.log(\"POST response:\", data))\n      .catch(err => console.error(\"Error in POST:\", err));\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n\n    // loadTask() заменяет вид экзамена инструкциями по заданию\n    function loadTask() {\n      const taskStartTime = new Date();\n      const taskMarkdown = `# 🛠 What prompting is - Practice Task\n\nThis task is designed to test your ability to apply effective prompting techniques to achieve specific outcomes using AI models. You will create, refine, and analyze prompts to solve real-world scenarios.\n\n---\n\n# 🔹 Task 1: Creating Effective Prompts\n\n## ✅ Steps to Complete:\n1. **Select an AI Assistant:**  \n   - Choose any publicly available AI assistant (Claude, ChatGPT, etc.)\n2. **Create Three Different Prompts:**  \n   - **Informational prompt:** Ask for an explanation of a complex concept  \n   - **Creative prompt:** Request a story or creative content  \n   - **Analytical prompt:** Ask the AI to analyze or compare information\n3. **Apply the Five-Step Framework:**  \n   - For each prompt, include:  \n     - **Context:** Background information  \n     - **Task:** Clear instructions  \n     - **Format:** Desired output structure  \n     - **Examples:** Sample outputs (where applicable)  \n     - **Constraints:** Specific limitations\n\n## ✏️ Expected Output:\n- Screenshots of your prompts and the AI responses  \n- A brief explanation of how you applied the framework\n\n---\n\n# 🔹 Task 2: Prompt Refinement\n\n## ✅ Steps to Complete:\n1. **Choose One Initial Prompt:**  \n   - Select one of your prompts from Task 1 or create a new one\n2. **Iterative Refinement:**  \n   - Run the prompt and note the output  \n   - Identify areas for improvement  \n   - Refine the prompt at least 3 times  \n   - Document each iteration and the changes\n\n## ✏️ Expected Output:\n- Screenshots showing the evolution of your prompt  \n- Analysis of improvements at each iteration\n\n---\n\n# 🔹 Task 3: Solving a Business Challenge\n\n## ✅ Steps to Complete:\n1. **Business Scenario:**  \n   - Imagine you are a marketing specialist launching a product\n2. **Create a Comprehensive Prompt:**  \n   - Develop a prompt to generate:  \n     - A catchy tagline  \n     - Three key selling points  \n     - A brief product description (100 words)\n3. **Use Advanced Techniques:**  \n   - Incorporate persona elements, formatting requirements, and constraints for tone and style\n\n## ✏️ Expected Output:\n- Your final prompt  \n- The AI-generated marketing content  \n- An explanation of the advanced techniques used\n\n---\n\n# 📌 Submission Instructions\n\n- **Format:** Google Docs or Word  \n- **Structure:**  \n  1. **Task 1:** Prompt Creation  \n  2. **Task 2:** Prompt Refinement Process  \n  3. **Task 3:** Business Challenge Solution  \n  4. **Reflection:** What you learned about effective prompting\n\n---\n\n# 💡 Bonus Challenge\n- **Comparative Analysis:**  \n  Run the same prompt on two different AI models and compare responses  \n- **Error Correction:**  \n  Identify a common mistake and develop a technique to prevent it\n\nBy completing this task, you will demonstrate your understanding of prompt engineering principles.`;\n      \n      const parsedMarkdown = parseMarkdown(taskMarkdown);\n      document.body.innerHTML = `\n        <div style=\"font-family: 'Open Sans', sans-serif; background: #F8F9FA; padding: 2rem;\">\n          ${parsedMarkdown}\n          <div style=\"margin-top: 2rem;\">\n            <label for=\"taskLinkInput\" style=\"font-weight: bold;\">Optional link:</label>\n            <input type=\"text\" id=\"taskLinkInput\" placeholder=\"https://docs.google.com/...\" style=\"width: 100%; padding: 8px; margin: 4px 0 1rem;\">\n            <input type=\"checkbox\" id=\"taskCompletedCheckbox\">\n            <label for=\"taskCompletedCheckbox\">Task Completed</label>\n          </div>\n        </div>\n      `;\n      \n      const checkbox = document.getElementById(\"taskCompletedCheckbox\");\n      checkbox.addEventListener(\"change\", function() {\n        if (checkbox.checked) {\n          const taskLink = document.getElementById(\"taskLinkInput\").value.trim() || \"\";\n          const now = new Date();\n          const day = String(now.getDate()).padStart(2, '0');\n          const month = String(now.getMonth() + 1).padStart(2, '0');\n          const year = now.getFullYear();\n          const hours = String(now.getHours()).padStart(2, '0');\n          const minutes = String(now.getMinutes()).padStart(2, '0');\n          const formattedDate = `${day}.${month}.${year} ${hours}:${minutes}`;\n          fetch(\"https://auto.crm-s.com/webhook/Onboarding/UpdateTaskTable\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ \n              link: taskLink,\n              date: formattedDate\n            })\n          })\n          .then(response => response.text())\n          .then(data => {\n            console.log(\"Task completed webhook sent:\", data);\n            checkbox.disabled = true;\n          })\n          .catch(err => console.error(\"Error sending task completed webhook:\", err));\n        }\n      });\n    }\n    \n    // Markdown parser: конвертирует markdown-заголовки в сворачиваемые элементы <details>\n    function parseMarkdown(markdownText) {\n      const lines = markdownText.split('\\n');\n      let html = \"\";\n      const stack = [];\n      lines.forEach(line => {\n        const match = line.match(/^(#{1,4})\\s+(.*)/);\n        if (match) {\n          const level = match[1].length;\n          const text = match[2];\n          while (stack.length && stack[stack.length - 1] >= level) {\n            html += \"</details>\";\n            stack.pop();\n          }\n          html += `<details><summary>${text}</summary>`;\n          stack.push(level);\n        } else {\n          html += line + \"<br>\";\n        }\n      });\n      while (stack.length) {\n        html += \"</details>\";\n        stack.pop();\n      }\n      return html;\n    }\n    \n    // Добавляем обработчик для кнопки Start Exam после загрузки DOM\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      document.getElementById(\"startExamBtn\").addEventListener(\"click\", startQuiz);\n    });\n  </script>\n</body>\n</html>",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-type",
                "value": "text/html"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        160,
        -60
      ],
      "id": "132de3bc-d589-46ce-bc80-46987e2b0491",
      "name": "Respond to Webhook",
      "notesInFlow": false
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "a402dbb2-9a98-4ac8-93af-277c2c91c08d",
  "triggerCount": 0,
  "tags": []
}