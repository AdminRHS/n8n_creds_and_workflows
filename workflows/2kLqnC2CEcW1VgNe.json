{
  "createdAt": "2025-06-11T08:53:03.284Z",
  "updatedAt": "2025-06-11T08:53:06.581Z",
  "id": "2kLqnC2CEcW1VgNe",
  "name": "AppTest-Meta_prompting",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "path": "onboarding/promptengineering/tests/MetaPrompting",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -440,
        -100
      ],
      "id": "7cd0a3c5-cfe5-4663-946e-457bb8abff85",
      "name": "Webhook",
      "webhookId": "7af98ef4-b564-4ff6-9dd6-1ac498171811"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <link type=\"image/png\" sizes=\"16x16\" rel=\"icon\" href=\"https://i.postimg.cc/gJf9MgWR/icons8-32.png\">\n  <meta charset=\"UTF-8\">\n  <title>Meta prompting</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    :root {\n      --deep-blue: #081E2F;\n      --primary-yellow: #FCB305;\n      --red: #D32F2F;\n      --red-hover: #C62828;\n      --green: #2E7D32;\n      --green-hover: #1B5E20;\n      --blue: #197502;\n      --blue-dark: #1555C0;\n      --blue-light: #4245F5;\n    }\n    body {\n      font-family: 'Open Sans', sans-serif;\n      background: #F8F9FA;\n      padding: 2rem;\n      max-width: 800px;\n      margin: 0 auto;\n      min-height: 100vh;\n    }\n    #titlePage {\n      text-align: center;\n      padding: 3rem 1rem;\n    }\n    #titlePage h1 {\n      font-size: 32px;\n      color: var(--deep-blue);\n      margin-bottom: 1.5rem;\n    }\n    .quiz-info {\n      background: white;\n      padding: 2rem;\n      border-radius: 12px;\n      box-shadow: 0 4px 12px rgba(8,30,47,0.1);\n      margin: 2rem auto;\n      max-width: 500px;\n    }\n    .info-item {\n      font-size: 16px;\n      color: #4A4A4A;\n      margin: 1rem 0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    #timer {\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: var(--green);\n      color: white;\n      padding: 8px 16px;\n      border-radius: 20px;\n      font-weight: 600;\n      box-shadow: 0 2px 6px rgba(46,125,50,0.2);\n    }\n    .hidden { display: none; }\n    .question {\n      background: white;\n      border-radius: 8px;\n      padding: 1.5rem;\n      margin-bottom: 1.5rem;\n      box-shadow: 0 2px 8px rgba(8,30,47,0.1);\n      transition: all 0.3s ease;\n    }\n    .question h3 {\n      font-size: 16px;\n      font-weight: 600;\n      color: var(--deep-blue);\n      margin: 0 0 1rem 0;\n    }\n    label {\n      display: block;\n      margin: 0.5rem 0;\n      padding: 0.75rem;\n      border-radius: 4px;\n      font-size: 14px;\n      color: #4A4A4A;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n    label:hover { background: rgba(25,118,210,0.04); }\n    /* Radio buttons (single-answer) */\n    input[type=\"radio\"] {\n      margin-right: 0.75rem;\n      accent-color: var(--green);\n      border-radius: 50%;\n      width: 16px;\n      height: 16px;\n    }\n    input[type=\"text\"],\n    input[type=\"number\"] {\n      padding: 0.5rem;\n      border: 1px solid #DEE2E6;\n      border-radius: 4px;\n      font-size: 14px;\n      width: 100%;\n      box-sizing: border-box;\n    }\n    /* Replace disabled profession input with a dropdown */\n    /* Old field:\n    <input type=\"text\" name=\"profession\" value=\"Prompt Engineer\" disabled>\n    */\n    /* New dropdown: */\n    select {\n      width: 100%;\n      padding: 0.5rem;\n      border: 1px solid #DEE2E6;\n      border-radius: 4px;\n      font-size: 14px;\n      background: white;\n      box-sizing: border-box;\n    }\n    button {\n      background: var(--green);\n      color: white;\n      border: none;\n      padding: 12px 24px;\n      border-radius: 6px;\n      font-weight: 700;\n      font-size: 15px;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      display: block;\n      margin: 2rem auto 0;\n      letter-spacing: 0.5px;\n    }\n    button:hover {\n      background: var(--green-hover);\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px rgba(46,125,50,0.3);\n    }\n    #result {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      text-align: center;\n      margin-top: 2rem;\n      box-shadow: 0 2px 8px rgba(8,30,47,0.1);\n    }\n    .correct {\n      border-left: 4px solid var(--green);\n      background: #F0F9FF;\n    }\n    .incorrect {\n      border-left: 4px solid var(--red);\n    }\n    .correct-answer {\n      background: #E8F5E9 !important;\n      border: 1px solid var(--green);\n      border-radius: 4px;\n      padding: 2px 4px;\n      margin-top: 0.5rem;\n      display: inline-block;\n    }\n    @media (max-width: 600px) {\n      body { padding: 1rem; }\n      .question { padding: 1rem; }\n      button { width: 100%; padding: 14px 20px; }\n      #timer { top: 10px; right: 10px; font-size: 14px; }\n    }\n  </style>\n</head>\n<body>\n  <!-- Title Page -->\n  <div id=\"titlePage\">\n    <h1>Meta prompting</h1>\n    <div class=\"quiz-info\">\n      <div class=\"info-item\">\n        <span>Questions:</span>\n        <strong>15</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Time Limit:</span>\n        <strong>5 minutes</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Passing Score:</span>\n        <strong>80%</strong>\n      </div>\n      <button id=\"startExamBtn\" onclick=\"startQuiz()\">Start Exam</button>\n    </div>\n  </div>\n\n  <!-- Quiz Container -->\n  <div id=\"quizContainer\" class=\"hidden\">\n    <div id=\"timer\">00:00</div>\n    <h1>Meta prompting</h1>\n    <form id=\"examForm\">\n      <!-- User Data Block (not scored) -->\n      <div class=\"question\" data-points=\"0\">\n        <h3>Enter Your Information</h3>\n        <label>\n          Your Name:\n          <input type=\"text\" name=\"fullName\" placeholder=\"e.g., John Doe\">\n        </label>\n        <label>\n          Your Profession:\n          <!-- Replace disabled text input with a dropdown -->\n          <select name=\"profession\">\n            <option value=\"\">Select your profession</option>\n            <option value=\"3d designer\">3D Designer</option>\n            <option value=\"account manager\">Account Manager</option>\n            <option value=\"affiliate manager\">Affiliate Manager</option>\n            <option value=\"analyst\">Analyst</option>\n            <option value=\"animator\">Animator</option>\n            <option value=\"back end developer\">Back End Developer</option>\n            <option value=\"chat operator\">Chat Operator</option>\n            <option value=\"content manager\">Content Manager</option>\n            <option value=\"copywriter\">Copywriter</option>\n            <option value=\"email marketer\">Email Marketer</option>\n            <option value=\"event manager\">Event Manager</option>\n            <option value=\"financial manager\">Financial Manager</option>\n            <option value=\"front end developer\">Front End Developer</option>\n            <option value=\"full stack developer\">Full Stack Developer</option>\n            <option value=\"graphic designer\">Graphic Designer</option>\n            <option value=\"hr manager\">HR Manager</option>\n            <option value=\"illustrator\">Illustrator</option>\n            <option value=\"influencer manager\">Influencer Manager</option>\n            <option value=\"interior designer\">Interior Designer</option>\n            <option value=\"investment manager\">Investment Manager</option>\n            <option value=\"lead generator\">Lead Generator</option>\n            <option value=\"linkbuilder\">Linkbuilder</option>\n            <option value=\"media buyer\">Media Buyer</option>\n            <option value=\"mobile developer\">Mobile Developer</option>\n            <option value=\"mobile video editor\">Mobile Video Editor</option>\n            <option value=\"motion designer\">Motion Designer</option>\n            <option value=\"personal assistant\">Personal Assistant</option>\n            <option value=\"ppc specialist\">PPC Specialist</option>\n            <option value=\"pr manager\">PR Manager</option>\n            <option value=\"project manager\">Project Manager</option>\n            <option value=\"proofreader\">Proofreader</option>\n            <option value=\"qa\">QA</option>\n            <option value=\"recruiter\">Recruiter</option>\n            <option value=\"sales manager\">Sales Manager</option>\n            <option value=\"seo manager\">SEO Manager</option>\n            <option value=\"social media manager\">Social Media Manager</option>\n            <option value=\"system administrator\">System Administrator</option>\n            <option value=\"targetologist\">Targetologist</option>\n            <option value=\"tourism manager\">Tourism Manager</option>\n            <option value=\"ui/ux designer\">UI/UX Designer</option>\n            <option value=\"video editor\">Video Editor</option>\n            <option value=\"web designer\">Web Designer</option>\n            <option value=\"wordpress designer\">WordPress Designer</option>\n          </select>\n        </label>\n        <label>\n          Your Recruiter:\n          <select name=\"recruiter\">\n            <option value=\"Anastasia Fadeeva\">Anastasia Fadeeva</option>\n            <option value=\"Elena Ermakova\">Elena Ermakova</option>\n            <option value=\"Anna Aleksandrova\">Anna Aleksandrova</option>\n            <option value=\"Sabina Gasanova\">Sabina Gasanova</option>\n          </select>\n        </label>\n      </div>\n\n      <!-- Q1 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>1. Which of the following best describes meta-prompting?</h3>\n        <label><input type=\"radio\" name=\"q1\" value=\"A\"> A) Creating simple and direct instructions for AI models.</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"B\" data-correct=\"true\"> B) Using prompts to guide and refine the behavior of other prompts.</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"C\"> C) Ignoring the importance of prompt design in AI interactions.</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"D\"> D) Focusing solely on fine-tuning the AI model's parameters directly.</label>\n      </div>\n\n      <!-- Q2 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>2. What is the primary purpose of meta-prompting?</h3>\n        <label><input type=\"radio\" name=\"q2\" value=\"A\"> A) To simplify prompt engineering for beginners.</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"B\"> B) To make AI responses more random and unpredictable.</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"C\" data-correct=\"true\"> C) To optimize and improve the effectiveness of AI prompts through a higher-level prompting strategy.</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"D\"> D) To bypass the need for detailed prompts altogether.</label>\n      </div>\n\n      <!-- Q3 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>3. In the context of AI interactions, meta-prompting can be seen as:</h3>\n        <label><input type=\"radio\" name=\"q3\" value=\"A\"> A) A less efficient alternative to traditional prompting.</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"B\" data-correct=\"true\"> B) A way to manage and orchestrate prompts for more complex outcomes.</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"C\"> C) Completely unrelated to prompt engineering.</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"D\"> D) Only applicable to very basic AI models.</label>\n      </div>\n\n      <!-- Q4 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>4. How does using prompts to refine other prompts contribute to better AI performance?</h3>\n        <label><input type=\"radio\" name=\"q4\" value=\"A\"> A) It makes the prompts more vague and open-ended, encouraging creativity.</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"B\" data-correct=\"true\"> B) It allows for iterative improvement and optimization of prompt strategies.</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"C\"> C) Refining prompts generally decreases the AI's ability to understand instructions.</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"D\"> D) Prompt refinement is only necessary for poorly designed AI models.</label>\n      </div>\n\n      <!-- Q5 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>5. What is a key benefit of iteratively refining prompts using meta-prompting techniques?</h3>\n        <label><input type=\"radio\" name=\"q5\" value=\"A\"> A) It reduces the need to understand the underlying AI model.</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"B\" data-correct=\"true\"> B) It leads to more consistent and desired outputs from AI models.</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"C\"> C) It makes prompt engineering less time-consuming.</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"D\"> D) It eliminates the possibility of unexpected AI responses.</label>\n      </div>\n\n      <!-- Q6 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>6. Automating optimization through meta-prompts primarily aims to:</h3>\n        <label><input type=\"radio\" name=\"q6\" value=\"A\"> A) Manually adjust prompts based on trial and error.</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"B\" data-correct=\"true\"> B) Use AI itself to refine and improve prompts automatically.</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"C\"> C) Remove the need for human intervention in prompt design entirely.</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"D\"> D) Randomly generate prompts without any optimization strategy.</label>\n      </div>\n\n      <!-- Q7 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>7. What is the advantage of automated prompt optimization compared to manual prompt tuning?</h3>\n        <label><input type=\"radio\" name=\"q7\" value=\"A\"> A) Manual tuning is generally more efficient and accurate.</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"B\" data-correct=\"true\"> B) Automation can explore a wider range of prompt variations and identify optimal strategies more quickly and systematically.</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"C\"> C) Automated optimization is less flexible and adaptable to new tasks.</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"D\"> D) There is no real advantage; manual and automated optimization are equally effective.</label>\n      </div>\n\n      <!-- Q8 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>8. How might meta-prompting techniques connect to machine learning principles like reinforcement learning?</h3>\n        <label><input type=\"radio\" name=\"q8\" value=\"A\"> A) Meta-prompts are completely independent of machine learning concepts.</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"B\" data-correct=\"true\"> B) Reinforcement learning can be used to train meta-prompts to automatically improve prompts based on feedback or reward signals.</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"C\"> C) Machine learning is only relevant to training the AI models themselves, not the prompts.</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"D\"> D) Meta-prompting contradicts the core ideas of reinforcement learning.</label>\n      </div>\n\n      <!-- Q9 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>9. Which machine learning technique is MOST directly relevant to automating prompt optimization through meta-prompting?</h3>\n        <label><input type=\"radio\" name=\"q9\" value=\"A\"> A) Supervised learning, for labeling prompt datasets.</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"B\"> B) Unsupervised learning, for clustering similar prompts.</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"C\" data-correct=\"true\"> C) Reinforcement learning, for learning to generate prompts that maximize desired outcomes.</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"D\"> D) Dimensionality reduction, for simplifying complex prompts.</label>\n      </div>\n\n      <!-- Q10 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>10. In the context of machine learning, how can data be used to enhance meta-prompting strategies?</h3>\n        <label><input type=\"radio\" name=\"q10\" value=\"A\"> A) Data is irrelevant to improving meta-prompts, as they are purely rule-based.</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"B\" data-correct=\"true\"> B) Data on prompt performance and user feedback can be used to train and refine meta-prompts, making optimization data-driven.</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"C\"> C) Data is only useful for training the base AI model, not for prompt strategies.</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"D\"> D) Meta-prompts are designed to work independently of any data input.</label>\n      </div>\n\n      <!-- Q11 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>11. Which of the following is an example of advanced meta-prompting?</h3>\n        <label><input type=\"radio\" name=\"q11\" value=\"A\"> A) Asking simple questions to an AI model.</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"B\" data-correct=\"true\"> B) Using prompts to decompose complex tasks into simpler sub-prompts for sequential AI processing.</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"C\"> C) Writing very long and detailed single prompts.</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"D\"> D) Ignoring previous AI responses when formulating new prompts.</label>\n      </div>\n\n      <!-- Q12 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>12. \"Chain of thought\" prompting, where you prompt the AI to explain its reasoning step-by-step, is an example of:</h3>\n        <label><input type=\"radio\" name=\"q12\" value=\"A\"> A) Basic prompting.</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"B\"> B) Ineffective prompting.</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"C\" data-correct=\"true\"> C) Advanced meta-prompting, as it guides the AI's internal process for better results.</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"D\"> D) A completely separate concept from meta-prompting.</label>\n      </div>\n\n      <!-- Q13 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>13. How could meta-prompting be used in advanced applications like AI-driven scientific discovery?</h3>\n        <label><input type=\"radio\" name=\"q13\" value=\"A\"> A) It is too simplistic for complex tasks like scientific discovery.</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"B\" data-correct=\"true\"> B) By using meta-prompts to guide AI through hypothesis generation, experiment design, and data analysis in an iterative and self-improving manner.</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"C\"> C) Scientific discovery is solely reliant on traditional programming, not AI prompts.</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"D\"> D) Meta-prompting is only useful for creative writing tasks, not scientific analysis.</label>\n      </div>\n\n      <!-- Q14 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>14. Looking towards the future, what is a potential development for self-improving AI prompts?</h3>\n        <label><input type=\"radio\" name=\"q14\" value=\"A\"> A) Prompts will become less important as AI models become more sophisticated.</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"B\" data-correct=\"true\"> B) AI systems will be able to autonomously evolve and optimize their own prompting strategies without human intervention in a continuous loop.</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"C\"> C) The field of prompt engineering will disappear as AI becomes fully autonomous.</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"D\"> D) Prompting will remain a static and unchanging field in AI development.</label>\n      </div>\n\n      <!-- Q15 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>15. What impact might self-improving AI prompts have on the future of AI development?</h3>\n        <label><input type=\"radio\" name=\"q15\" value=\"A\"> A) They will likely slow down AI progress due to increased complexity.</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"B\" data-correct=\"true\"> B) They could lead to a significant acceleration in AI capabilities and efficiency by enabling AI to become more effective at problem-solving and task execution autonomously.</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"C\"> C) They will have no significant impact on the overall trajectory of AI development.</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"D\"> D) They will make AI systems less reliable and harder to control.</label>\n      </div>\n\n      <button id=\"submitBtn\" type=\"button\" onclick=\"calculateScore()\">Submit Exam</button>\n    </form>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    // Fisher–Yates shuffle function\n    function shuffle(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      return array;\n    }\n    // Randomize answer labels (excluding the user info block)\n    function randomizeAnswers() {\n      const questions = document.querySelectorAll('.question[data-points]:not([data-points=\"0\"])');\n      questions.forEach(question => {\n        const labels = Array.from(question.querySelectorAll('label'));\n        const shuffled = shuffle(labels);\n        shuffled.forEach(label => label.parentNode.removeChild(label));\n        const heading = question.querySelector('h3');\n        shuffled.forEach(label => heading.parentNode.appendChild(label));\n      });\n    }\n    let timer;\n    let seconds = 0;\n    const timeLimit = 300; // 5 minutes\n    const examName = \"Prompt chaining\";\n    function startQuiz() {\n      document.getElementById('titlePage').classList.add('hidden');\n      document.getElementById('quizContainer').classList.remove('hidden');\n      randomizeAnswers();\n      startTimer();\n    }\n    function startTimer() {\n      timer = setInterval(() => {\n        seconds++;\n        const minutes = Math.floor(seconds / 60);\n        const rem = seconds % 60;\n        document.getElementById('timer').textContent =\n          String(minutes).padStart(2, '0') + \":\" + String(rem).padStart(2, '0');\n        if (seconds >= timeLimit) {\n          clearInterval(timer);\n          calculateScore(true);\n        }\n      }, 1000);\n    }\n    // Format date as \"dd.mm.yyyy hh:mm\"\n    function formatDate(date) {\n      const options = {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false\n      };\n      const formatted = date.toLocaleString(\"en-GB\", options);\n      return formatted.replace(/\\//g, \".\").replace(\", \", \" \");\n    }\n    function calculateScore(timeout = false) {\n      const submitButton = document.getElementById('submitBtn');\n      if (submitButton) {\n        submitButton.style.display = 'none';\n      }\n      clearInterval(timer);\n      let totalPoints = 0;\n      let maxPoints = 0;\n      const questions = document.querySelectorAll('.question');\n      questions.forEach(question => {\n        const points = parseInt(question.dataset.points) || 1;\n        maxPoints += points;\n        if (points === 0) return;\n        let correct = true;\n        const inputs = question.querySelectorAll('input');\n        let selectedValues = [];\n        let correctValues = [];\n        inputs.forEach(inp => {\n          if (inp.checked) selectedValues.push(inp.value);\n          if (inp.dataset.correct === \"true\") correctValues.push(inp.value);\n        });\n        if (\n          selectedValues.length !== correctValues.length ||\n          !selectedValues.every(val => correctValues.includes(val))\n        ) {\n          correct = false;\n        }\n        if (correct) {\n          totalPoints += points;\n          question.classList.add('correct');\n        } else {\n          question.classList.add('incorrect');\n          inputs.forEach(inp => {\n            if (inp.dataset.correct === \"true\") {\n              inp.parentElement.classList.add('correct-answer');\n            }\n          });\n        }\n      });\n      const percentage = ((totalPoints / maxPoints) * 100).toFixed(1);\n      const timeUsed = `${Math.floor(seconds / 60)}m ${seconds % 60}s`;\n      let resultsHTML = `\n        <h3>Exam Results</h3>\n        <p>Your score: ${totalPoints} / ${maxPoints} (${percentage}%)</p>\n        <p>Time used: ${timeUsed}</p>\n        ${percentage >= 80 ? \"Congratulations! You passed!\" : \"Try again! Review your mistakes below.\"}\n        ${timeout ? \"<p class='warning'>Time limit exceeded!</p>\" : \"\"}\n      `;\n      resultsHTML += `\n        <button type=\"button\" onclick=\"location.reload()\">Retry</button>\n        <button type=\"button\" onclick=\"window.location.href='#'\">Read Again</button>\n        <button type=\"button\" id=\"taskButton\" onclick=\"loadTask()\">Task</button>\n      `;\n      document.getElementById('result').innerHTML = resultsHTML;\n      const fullName = document.querySelector('[name=\"fullName\"]')?.value.trim() || \"\";\n      const profession = document.querySelector('[name=\"profession\"]')?.value.trim() || \"\";\n      const recruiter = document.querySelector('[name=\"recruiter\"]')?.value.trim() || \"\";\n      const postData = {\n        fullName,\n        profession,\n        recruiter,\n        day: \"4\",\n        examName,\n        scoreObtained: totalPoints,\n        scoreTotal: maxPoints,\n        timeUsed: seconds,\n        timeTotal: timeLimit,\n        date: formatDate(new Date())\n      };\n      fetch(\"https://auto.crm-s.com/webhook/Onboarding/Update\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json, text/plain, */*\"\n        },\n        body: JSON.stringify(postData),\n        mode: \"cors\"\n      })\n      .then(async (res) => {\n        console.log(\"POST response status:\", res.status);\n        const text = await res.text();\n        console.log(\"POST response body:\", text);\n      })\n      .catch(err => console.error(\"Error in POST:\", err));\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n    // loadTask() replaces the quiz view with task instructions\n    function loadTask() {\n      const taskMarkdown = `# 🛠 Meta prompting - Practice Task\n\n# 🔹 Design a simple exercise based on the guide. Focus on:\n- Using meta-prompts to refine an initial prompt.\n- Generating multiple refined prompt variations.\n- Recording key details in a summary table.\n\n# ✅ Steps:\n\n1. Define a Baseline Prompt: Write a basic prompt, for example: \"Generate a product description for a new eco-friendly water bottle.\"\n\n2. Create a Meta-Prompt: Write a prompt that instructs the AI to critique and improve the baseline prompt for clarity, creativity, and detail.\n\n3. Generate Prompt Variations: Use an AI tool to produce at least three refined versions of the baseline prompt based on your meta-prompt.\n\n4. Compare and Evaluate: Run both the original and each refined prompt. Compare the outputs, noting improvements in engagement, clarity, and detail.\n\n5. Record in a Table: Use a tool like Google Sheets to create a table with these columns: Original Prompt, Meta-Prompt, Refined Prompt, Key Improvements, and Output Evaluation.\n\n# ✏️ When finished, mark the checkbox and optionally provide a link to your spreadsheet.`;\n\n      const parsedMarkdown = parseMarkdown(taskMarkdown);\n      document.body.innerHTML = `\n        <div style=\"font-family: 'Open Sans', sans-serif; background: #F8F9FA; padding: 2rem; max-width: 800px; margin: 0 auto;\">\n          ${parsedMarkdown}\n          <div style=\"margin-top: 2rem;\">\n            <label for=\"taskLinkInput\" style=\"font-weight: bold;\">Optional link to your work:</label>\n            <input type=\"text\" id=\"taskLinkInput\" placeholder=\"https://docs.google.com/spreadsheets/d/...\" style=\"width: 100%; padding: 8px; margin: 4px 0 1rem;\">\n            <input type=\"checkbox\" id=\"taskCompletedCheckbox\">\n            <label for=\"taskCompletedCheckbox\">Task Completed</label>\n          </div>\n        </div>\n      `;\n      const checkbox = document.getElementById(\"taskCompletedCheckbox\");\n      checkbox.addEventListener(\"change\", function() {\n        if (checkbox.checked) {\n          const taskLink = document.getElementById(\"taskLinkInput\").value.trim() || \"\";\n          checkbox.disabled = true;\n          fetch(\"https://auto.crm-s.com/webhook/Onboarding/UpdateTaskTable\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Accept\": \"application/json, text/plain, */*\"\n            },\n            body: JSON.stringify({\n              link: taskLink,\n              date: formatDate(new Date())\n            }),\n            mode: \"cors\"\n          })\n          .then(async (res) => {\n            console.log(\"Task completed webhook status:\", res.status);\n            const text = await res.text();\n            console.log(\"Task completed webhook body:\", text);\n          })\n          .catch(err => {\n            console.error(\"Error sending task completed webhook:\", err);\n            alert(\"There was an issue connecting to the server. Your instructor will be notified.\");\n          });\n        }\n      });\n    }\n    // Markdown parser: converts markdown headings into collapsible <details> elements (collapsed by default)\n    function parseMarkdown(markdownText) {\n      const lines = markdownText.split('\\n');\n      let html = \"\";\n      const stack = [];\n      lines.forEach(line => {\n        const match = line.match(/^(#{1,4})\\s+(.*)/);\n        if (match) {\n          const level = match[1].length;\n          const text = match[2];\n          while (stack.length && stack[stack.length - 1] >= level) {\n            html += \"</details>\";\n            stack.pop();\n          }\n          html += `<details><summary>${text}</summary>`;\n          stack.push(level);\n        } else {\n          html += line + \"<br>\";\n        }\n      });\n      while (stack.length) {\n        html += \"</details>\";\n        stack.pop();\n      }\n      return html;\n    }\n    // Add event listener for the Start Exam button after DOM loads\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      document.getElementById(\"startExamBtn\").addEventListener(\"click\", startQuiz);\n    });\n  </script>\n</body>\n</html>",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-type",
                "value": "text/html"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -220,
        -100
      ],
      "id": "199d78f2-2cf7-435c-a227-aa3c4ce00fc3",
      "name": "Respond to Webhook",
      "notesInFlow": false
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "20968ec4-f7d1-4345-9dd7-7109ac2b90b0",
  "triggerCount": 0,
  "tags": []
}