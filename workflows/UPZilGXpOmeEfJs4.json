{
  "createdAt": "2025-06-11T08:45:06.031Z",
  "updatedAt": "2025-06-12T12:57:48.207Z",
  "id": "UPZilGXpOmeEfJs4",
  "name": "leila",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyHour"
            }
          ]
        }
      },
      "name": "Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -200,
        60
      ],
      "id": "c8031de3-5442-4260-b712-5878a491cf5b"
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": 15,
        "filters": {
          "q": "from:(gemini-notes OR meetings-noreply)"
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        220,
        0
      ],
      "id": "87fd405a-eab8-4c96-9738-e6c7fc54ad35",
      "name": "Gmail",
      "webhookId": "5f81371a-df31-4709-852d-76cfa6a7deb0",
      "credentials": {
        "gmailOAuth2": {
          "id": "sv4epLX3dUAhBbno",
          "name": "Sales Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "sales@rh-s.com",
          "mode": "list",
          "cachedResultName": "sales@rh-s.com"
        },
        "timeMin": "={{ $now.minus({week: 1}) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        220,
        220
      ],
      "id": "4a50456b-a7e2-4921-92e9-4ce1d345b908",
      "name": "Google Calendar",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "lmaohrn9G1cLylHj",
          "name": "Sales Google Calendar"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "fieldsToMatchString": "company",
        "options": {
          "fuzzyCompare": true
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        760,
        60
      ],
      "id": "9f07476f-5180-4711-bb81-585e853d87a2",
      "name": "Merge",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{$json.calendar_title}}",
                    "rightValue": "LG Call",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "6bc593b9-430a-4d78-bfa5-af02f1cca6d1"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": " LG Call"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ff4fb890-5dc2-4a6d-8854-5b5e9342e2e8",
                    "leftValue": "={{$json.calendar_title}}",
                    "rightValue": " Interview",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": " Interview"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fb22d71a-4ed1-4af8-9f4a-9fd1292c5c6c",
                    "leftValue": "= {{$json.calendar_title}}",
                    "rightValue": "Follow Up",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": " Follow Up"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ac388c14-ad74-4fe2-bdc0-0df2fb89b619",
                    "leftValue": "={{$json.calendar_title}}",
                    "rightValue": " Kick Off ",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": " Kick Off "
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3f6b629d-d276-41e8-8b6d-51eb007302b0",
                    "leftValue": "Intro Call",
                    "rightValue": "={{$json.calendar_title}}",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Intro Call"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "92272608-ed73-48ad-8891-8053849dd82d",
                    "leftValue": "Introductory Call",
                    "rightValue": "={{$json.calendar_title}}",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Introductory Call"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1480,
        -20
      ],
      "id": "208a7321-a59e-48b9-95c5-ca653d20fb55",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an advanced AI sales call assistant. Summarize the call information provided below in a structured format for internal CRM. Identify key details: client company, contact person, topics discussed, next steps, and any blockers or risks.\n\nCall details:\nEmail Subject: {{$json.email_subject}}\nEmail From: {{$json.email_from}}\nEmail Date: {{$json.email_date}}\nCalendar Title: {{$json.calendar_title}}\nCalendar Start: {{$json.calendar_start}}\nCalendar Description: {{$json.calendar_description}}\n\nReturn your summary in this format:\n- Company:\n- Contact:\n- Main Points:\n- Next Steps:\n- Blockers/Risks:\n- Any additional notes:",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "message": "See the call details above and generate the summary as requested."
            },
            {
              "message": "Return output strictly as JSON: {field1: …, field2: …}"
            }
          ]
        },
        "batching": {
          "batchSize": 5,
          "delayBetweenBatches": 3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1860,
        -700
      ],
      "id": "58e783c0-4d82-408d-949b-50dc70485fff",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {
          "frequencyPenalty": 0,
          "maxTokens": 1500,
          "responseFormat": "json_object",
          "presencePenalty": 0,
          "temperature": 0.3,
          "timeout": 100000,
          "maxRetries": 2,
          "topP": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1900,
        -540
      ],
      "id": "d016cc11-27cc-4219-b97c-4bc997387b36",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "XMxQ0GCtR8pIxTvP",
          "name": "DEV OpenAI expensive"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"call_type\": \"LG Call\",\n  \"summary\": \"Short structured summary of the call (3-5 речень, без води, без повторів)\",\n  \"client_name\": \"Імʼя Прізвище клієнта (якщо є)\",\n  \"client_company\": \"Назва компанії (якщо є)\",\n  \"main_request\": \"Головний запит/ціль клієнта\",\n  \"next_steps\": \"Конкретні наступні дії з дедлайнами (дати, задачі, відповідальні)\",\n  \"call_date\": \"2025-06-11\",\n  \"key_points\": [\n    \"Коротко пунктами що важливе обговорювали\",\n    \"Ще один пункт\"\n  ],\n  \"decision_maker\": \"Так/Ні (є чи немає на дзвінку)\",\n  \"extra_notes\": \"Щось важливе додатково (якщо є)\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2040,
        -560
      ],
      "id": "b36440e3-6295-4b6e-ac6f-75f3359049a1",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Analyze this Interview call and create a concise, actionable summary (max 5 sentences). Highlight the main discussion points, candidate strengths, concerns, and next steps. Be direct and avoid fluff.\nReturn only the structured result, no explanations.",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "You are an AI assistant helping with interview analysis.   Summarize the following call using only valid JSON as output, with these fields: {   \"call_type\": \"Interview\",   \"summary\": \"Brief (max 5 sentences) actionable summary of the interview\",   \"candidate_strengths\": \"Key positive qualities of the candidate\",   \"concerns\": \"Potential issues or red flags (if any)\",   \"main_topics\": [\"topic 1\", \"topic 2\"],   \"next_steps\": \"What to do next\",   \"date\": \"{{$json.calendar_start}}\" } Respond strictly in valid JSON. Do not write any explanations or extra text."
            }
          ]
        },
        "batching": {
          "batchSize": 5,
          "delayBetweenBatches": 3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1900,
        -400
      ],
      "id": "a47380aa-b8f4-4a0f-ac43-ca6f191fcf41",
      "name": "Basic LLM Chain1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {
          "frequencyPenalty": 0,
          "maxTokens": 1000,
          "responseFormat": "json_object",
          "presencePenalty": 0,
          "temperature": 0.3,
          "timeout": 100000,
          "maxRetries": 2,
          "topP": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1920,
        -260
      ],
      "id": "7d68ade5-3f9b-4e1c-a812-58887c1ef3a7",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "XMxQ0GCtR8pIxTvP",
          "name": "DEV OpenAI expensive"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"call_type\": \"Interview\",\n  \"interviewee_name\": \"Jane Smith\",\n  \"interviewer_name\": \"Michael Brown\",\n  \"company\": \"ACME Corp\",\n  \"position\": \"Business Analyst\",\n  \"interview_date\": \"2025-06-10T13:00:00Z\",\n  \"summary\": \"Concise summary of the interview. Main impressions, attitude, and key points.\",\n  \"strengths\": [\"Analytical thinking\", \"Teamwork\", \"Attention to detail\"],\n  \"weaknesses\": [\"Limited experience with AI tools\"],\n  \"questions_asked\": [\n    \"Describe your experience with data analysis.\",\n    \"What motivates you in your work?\"\n  ],\n  \"candidate_questions\": [\n    \"What is the company culture?\",\n    \"Are there opportunities for professional growth?\"\n  ],\n  \"decision\": \"To be decided\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2060,
        -260
      ],
      "id": "c61c31d5-7aa1-4aa4-b17b-2827834a0af0",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "You are an AI assistant that processes follow-up sales call notes. Your task is to generate a concise summary, highlight client feedback, next steps, objections, and action items. Respond only in JSON using the schema below. If a field is missing, leave it empty. All output must be strictly valid JSON.\n\n{\n  \"call_type\": \"Follow Up\",\n  \"client_name\": \"\",\n  \"company\": \"\",\n  \"date\": \"\",\n  \"summary\": \"\",\n  \"feedback\": \"\",\n  \"objections\": \"\",\n  \"next_steps\": \"\",\n  \"action_items\": [],\n  \"responsible\": []\n}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You are an advanced AI assistant for processing [назва гілки, наприклад, Follow Up Call] notes. You must always reply STRICTLY in JSON format matching the provided schema. Output ONLY valid JSON. If data is missing, leave fields empty or null. Do not generate text outside JSON."
            },
            {
              "type": "HumanMessagePromptTemplate",
              "message": "=Here are the notes for the [назва гілки, наприклад, follow-up call]: {{ $json.notes }} Respond in JSON using this schema: {   \"call_type\": \"[назва гілки]\",   \"client_name\": \"\",   \"company\": \"\",   \"date\": \"\",   \"summary\": \"\",   \"feedback\": \"\",   \"objections\": \"\",   \"next_steps\": \"\",   \"action_items\": [],   \"responsible\": [] }"
            }
          ]
        },
        "batching": {
          "batchSize": 5,
          "delayBetweenBatches": 3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1900,
        -120
      ],
      "id": "a391a99c-d62b-4294-92d4-7e871be7b369",
      "name": "Basic LLM Chain2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {
          "frequencyPenalty": 0,
          "maxTokens": 1200,
          "responseFormat": "json_object",
          "presencePenalty": 0,
          "temperature": 0.3,
          "timeout": 100000
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1900,
        -20
      ],
      "id": "b6187e55-bb62-461e-8826-e6437debea57",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "XMxQ0GCtR8pIxTvP",
          "name": "DEV OpenAI expensive"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"call_type\": \"Follow Up\",\n  \"client_name\": \"John Doe\",\n  \"company\": \"Acme Inc.\",\n  \"date\": \"2025-06-11T10:00:00Z\",\n  \"summary\": \"Summary of the follow up call. Main discussion points.\",\n  \"feedback\": \"Client shared feedback on our offer.\",\n  \"objections\": \"No major objections.\",\n  \"next_steps\": \"Send proposal by next week.\",\n  \"action_items\": [\n    \"Prepare proposal\",\n    \"Schedule next meeting\"\n  ],\n  \"responsible\": [\n    \"Alex (Manager)\",\n    \"Lena (Sales)\"\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2060,
        -20
      ],
      "id": "6bccbd33-e20b-4915-ba48-fc5f22e0ebc2",
      "name": "Structured Output Parser2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here are the notes for the kick off call:\n{{ $json.notes }}\nRespond in JSON using this schema:\n{\n  \"call_type\": \"Kick Off\",\n  \"client_name\": \"\",\n  \"company\": \"\",\n  \"date\": \"\",\n  \"agenda\": \"\",\n  \"participants\": [],\n  \"main_points\": \"\",\n  \"next_steps\": \"\",\n  \"action_items\": [],\n  \"responsible\": []\n}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "You are an advanced AI assistant for processing Kick Off Call notes. You must always reply STRICTLY in JSON format matching the provided schema. Output ONLY valid JSON. If data is missing, leave fields empty or null. Do not generate text outside JSON."
            }
          ]
        },
        "batching": {
          "batchSize": 5,
          "delayBetweenBatches": 3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1900,
        140
      ],
      "id": "f6583713-c4a2-4085-8610-7950c4bc9a0d",
      "name": "Basic LLM Chain3"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {
          "frequencyPenalty": 0,
          "maxTokens": 1200,
          "responseFormat": "json_object",
          "presencePenalty": 0,
          "temperature": 0.3,
          "timeout": 100000,
          "maxRetries": 2,
          "topP": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1920,
        260
      ],
      "id": "1ad5f788-ab82-4c57-93da-3eb83af139e2",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "XMxQ0GCtR8pIxTvP",
          "name": "DEV OpenAI expensive"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"call_type\": \"Kick Off\",\n  \"client_name\": \"John Doe\",\n  \"company\": \"Acme Inc.\",\n  \"date\": \"2025-06-11T10:00:00Z\",\n  \"agenda\": \"Discuss project launch\",\n  \"participants\": [\"John Doe\", \"Jane Smith\"],\n  \"main_points\": \"Kick off objectives, deadlines, and responsibilities\",\n  \"next_steps\": \"Prepare project plan\",\n  \"action_items\": [\"Draft project plan\", \"Assign tasks\"],\n  \"responsible\": [\"John Doe\", \"Jane Smith\"]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2060,
        260
      ],
      "id": "08e41be3-eced-49f8-b401-fc78ac0104a9",
      "name": "Structured Output Parser3"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Ось нотатки Intro Call:\n{{$json.notes}}\n\nВідповідай у цьому JSON (без додаткового тексту):\n\n{\n  \"intro_call_summary\": \"\",\n  \"client_name\": \"\",\n  \"client_company\": \"\",\n  \"call_date\": \"\",\n  \"main_questions\": \"\",\n  \"discussed_topics\": \"\",\n  \"decisions\": \"\",\n  \"responsible\": \"\",\n  \"next_steps\": \"\",\n  \"comments\": \"\"\n}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Ти — AI-асистент для парсингу нотаток Intro Call. Витягуй і підставляй будь-яку релевантну інформацію у поля. Не залишай жодне поле пустим — навіть якщо інформація неявна, підставляй N/A. Форматуй тільки у валідний JSON."
            },
            {
              "type": "HumanMessagePromptTemplate",
              "message": "=Ось нотатки Intro Call:\n{{$json.notes}}\n\nВідповідай у цьому JSON (без додаткового тексту):\n\n{\n  \"intro_call_summary\": \"\",\n  \"client_name\": \"\",\n  \"client_company\": \"\",\n  \"call_date\": \"\",\n  \"main_questions\": \"\",\n  \"discussed_topics\": \"\",\n  \"decisions\": \"\",\n  \"responsible\": \"\",\n  \"next_steps\": \"\",\n  \"comments\": \"\"\n}"
            }
          ]
        },
        "batching": {
          "batchSize": 5,
          "delayBetweenBatches": 3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1820,
        420
      ],
      "id": "cc09b267-fc8a-44ec-9727-e3ac6a9b478f",
      "name": "Basic LLM Chain4",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {
          "frequencyPenalty": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1840,
        580
      ],
      "id": "1bd3ee56-9b2b-44c4-9a94-79b87ec7adcb",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "XMxQ0GCtR8pIxTvP",
          "name": "DEV OpenAI expensive"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"intro_call_summary\": \"string\",\n  \"client_name\": \"string\",\n  \"client_company\": \"string\",\n  \"call_date\": \"string\",\n  \"main_questions\": [\"string\"],\n  \"discussed_topics\": [\"string\"],\n  \"decisions\": [\"string\"],\n  \"responsible\": \"string\",\n  \"next_steps\": [\"string\"],\n  \"comments\": \"string\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1980,
        580
      ],
      "id": "16388e1f-7c9f-41a4-a757-d0a3c931afab",
      "name": "Structured Output Parser4"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Generate the Introductory Call summary as instructed below.",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=You are an AI assistant for Introductory Call analysis. Always reply STRICTLY in JSON (GSON) format using the provided schema. No text outside JSON. If any value is missing, use an empty string, null, or an empty array.  Here are the notes from the Introductory Call: {{$json.notes}}  Respond in JSON using this schema: {   \"call_type\": \"Introductory Call\",   \"client_name\": \"\",   \"company\": \"\",   \"date\": \"\",   \"participants\": [],   \"agenda\": \"\",   \"main_points\": [],   \"next_steps\": [],   \"action_items\": [],   \"responsible\": [],   \"comments\": \"\" }"
            }
          ]
        },
        "batching": {
          "batchSize": 5,
          "delayBetweenBatches": 2
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        1800,
        740
      ],
      "id": "3d7ffb81-7053-4b4e-9c93-1fdacf1631cc",
      "name": "Basic LLM Chain5"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {
          "frequencyPenalty": 0,
          "maxTokens": 1000,
          "responseFormat": "json_object",
          "presencePenalty": 0,
          "temperature": 0.3,
          "timeout": 60000,
          "maxRetries": 2,
          "topP": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1800,
        900
      ],
      "id": "82a2880a-9ee3-4a5a-a285-848da5e93ce1",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "XMxQ0GCtR8pIxTvP",
          "name": "DEV OpenAI expensive"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"call_type\": \"Introductory Call\",\n  \"client_name\": \"Anna Voronina\",\n  \"company\": \"Orbit Solutions\",\n  \"date\": \"2025-06-11T14:00:00Z\",\n  \"participants\": [\"Anna Voronina\", \"Maksym Ilchenko\"],\n  \"agenda\": \"Introduction of project scope and key stakeholders.\",\n  \"main_points\": [\n    \"Reviewed client expectations\",\n    \"Discussed timelines\",\n    \"Identified main risks\"\n  ],\n  \"next_steps\": [\n    \"Send initial documentation\",\n    \"Schedule technical deep-dive\"\n  ],\n  \"action_items\": [\n    \"Prepare kickoff materials\",\n    \"Assign onboarding manager\"\n  ],\n  \"responsible\": [\"Anna Voronina\", \"Maksym Ilchenko\"],\n  \"comments\": \"Client motivated, no major blockers.\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1960,
        900
      ],
      "id": "b0fdc015-bc3b-4965-87d1-45bf22e0b1a5",
      "name": "Structured Output Parser5"
    },
    {
      "parameters": {
        "jsCode": "// For each email item, extract the company name from the subject line\nreturn items.map(item => {\n  const subj = item.json.Subject || \"\";\n  // Example: 'Notes: “Simplexity Group AG – Remote Helpers” Jun 10, 2025'\n  // Remove everything before first quotation mark\n  // Remove trailing '- Remote Helpers' and dates\n  let company = \"\";\n  const match = subj.match(/[“\"](.+?)(?:(?:\\s*-\\s*Remote Helpers)?)[”\"]/);\n  if (match) {\n    company = match[1].trim();\n  }\n  item.json.company = company;\n  return item;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        440,
        0
      ],
      "id": "3e99df59-71f8-4039-8cc7-10e57f0736c0",
      "name": "Code"
    },
    {
      "parameters": {
        "jsCode": "// For each calendar event, extract the company name from the summary field\nreturn items.map(item => {\n  const summary = item.json.summary || \"\";\n  // Example: 'Simplexity Group AG - Follow up'\n  // Remove trailing ' - Follow up' or similar\n  let company = summary;\n  if (company.includes(\" - \")) {\n    company = company.split(\" - \")[0].trim();\n  }\n  item.json.company = company;\n  return item;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        440,
        220
      ],
      "id": "66bf995d-fdc7-49d6-87fe-5ffbc23bc3d0",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n  const data = item.json;\n\n  // Витягуємо company та call_type із Subject (якщо треба)\n  const subject = data.Subject || \"\";\n  const company = data.company || \"\";\n  const summary = data.summary || \"\";\n  const from = data.From || \"\";\n  const to = data.To || \"\";\n  const description = data.description || \"\";\n\n  // Витягуємо старт та кінець (можуть бути вкладені об'єкти)\n  let start = \"\";\n  let end = \"\";\n  if (data.start && typeof data.start === \"object\") {\n    start = data.start.dateTime || \"\";\n  }\n  if (data.end && typeof data.end === \"object\") {\n    end = data.end.dateTime || \"\";\n  }\n\n  // Парсимо тип дзвінка з subject/summary\n  let call_type = \"\";\n  const callTypeSource = subject + \" \" + summary;\n  const match = callTypeSource.match(/(follow ?up|interview|kick ?off|intro ?call|introductory ?call|lg ?call)/i);\n  if (match) {\n    call_type = match[1];\n  }\n\n  return {\n    json: {\n      id: data.id || \"\",\n      threadId: data.threadId || \"\",\n      company: company,\n      subject: subject,\n      summary: summary,\n      call_type: call_type,\n      from: from,\n      to: to,\n      start: start,\n      end: end,\n      description: description\n      // додаєш ще що треба тут\n    }\n  }\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1080,
        60
      ],
      "id": "d19d3249-3619-4b35-8575-2ef4c421e11c",
      "name": "merdge gmail+calendar"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "18r0h4wJz86BIRkQS0EelNQmwIG1axMllcRSnsuqH7Ig",
          "mode": "list",
          "cachedResultName": "Daily File Monitor + App Script",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/18r0h4wJz86BIRkQS0EelNQmwIG1axMllcRSnsuqH7Ig/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2180,
        420
      ],
      "id": "1aababae-4f3f-4ccf-be81-39458e4de723",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "dbxVSN0gaWLyc7UW",
          "name": "Sales Google Sheets"
        }
      }
    }
  ],
  "connections": {
    "Trigger": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Calendar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "merdge gmail+calendar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Basic LLM Chain5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser2": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain2",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser3": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain3",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain4",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser4": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain4",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain5",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser5": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain5",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "merdge gmail+calendar": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain4": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "3f611602-1bfa-49c0-b328-7c4a72ef4820",
  "triggerCount": 0,
  "tags": []
}