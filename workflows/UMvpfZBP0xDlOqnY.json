{
  "createdAt": "2025-06-11T08:49:51.634Z",
  "updatedAt": "2025-06-11T08:49:54.758Z",
  "id": "UMvpfZBP0xDlOqnY",
  "name": "AppTest-Fill_companyleads_data_in_CRM",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "path": "onboarding/leadgeneration/tests/FillCompanyAndLeadsDataInCRM",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -360,
        -160
      ],
      "id": "3e45c4b0-161a-4667-85d8-3ccd54be32dc",
      "name": "Webhook",
      "webhookId": "3c44d2d5-50f0-4939-bb2e-3eea9cf97bb6"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <link type=\"image/png\" sizes=\"16x16\" rel=\"icon\" href=\"https://i.postimg.cc/gJf9MgWR/icons8-32.png\">\n  <meta charset=\"UTF-8\">\n  <title>Fill company/leads' data in CRM</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    :root {\n      --deep-blue: #081E2F;\n      --primary-yellow: #FCB305;\n      --red: #D32F2F;\n      --red-hover: #C62828;\n      --green: #2E7D32;\n      --green-hover: #1B5E20;\n      --blue: #197502;\n      --blue-dark: #1555C0;\n      --blue-light: #4245F5;\n    }\n    body {\n      font-family: 'Open Sans', sans-serif;\n      background: #F8F9FA;\n      padding: 2rem;\n      max-width: 800px;\n      margin: 0 auto;\n      min-height: 100vh;\n    }\n    #titlePage {\n      text-align: center;\n      padding: 3rem 1rem;\n    }\n    #titlePage h1 {\n      font-size: 32px;\n      color: var(--deep-blue);\n      margin-bottom: 1.5rem;\n    }\n    .quiz-info {\n      background: white;\n      padding: 2rem;\n      border-radius: 12px;\n      box-shadow: 0 4px 12px rgba(8, 30, 47, 0.1);\n      margin: 2rem auto;\n      max-width: 500px;\n    }\n    .info-item {\n      font-size: 16px;\n      color: #4A4A4A;\n      margin: 1rem 0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    #timer {\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: var(--green);\n      color: white;\n      padding: 8px 16px;\n      border-radius: 20px;\n      font-weight: 600;\n      box-shadow: 0 2px 6px rgba(46, 125, 50, 0.2);\n    }\n    .hidden {\n      display: none;\n    }\n    .question {\n      background: white;\n      border-radius: 8px;\n      padding: 1.5rem;\n      margin-bottom: 1.5rem;\n      box-shadow: 0 2px 8px rgba(8, 30, 47, 0.1);\n      transition: all 0.3s ease;\n    }\n    .question h3 {\n      font-size: 16px;\n      font-weight: 600;\n      color: var(--deep-blue);\n      margin: 0 0 1rem 0;\n    }\n    label {\n      display: block;\n      margin: 0.5rem 0;\n      padding: 0.75rem;\n      border-radius: 4px;\n      font-size: 14px;\n      color: #4A4A4A;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n    label:hover {\n      background: rgba(25, 118, 210, 0.04);\n    }\n    /* Radio buttons (single-answer) */\n    input[type=\"radio\"] {\n      margin-right: 0.75rem;\n      accent-color: var(--green);\n      border-radius: 50%;\n      width: 16px;\n      height: 16px;\n    }\n    /* Checkboxes (multi-answer) */\n    input[type=\"checkbox\"] {\n      margin-right: 0.75rem;\n      accent-color: var(--green);\n    }\n    input[type=\"text\"],\n    input[type=\"number\"] {\n      padding: 0.5rem;\n      border: 1px solid #DEE2E6;\n      border-radius: 4px;\n      font-size: 14px;\n      width: 100%;\n      box-sizing: border-box;\n    }\n    /* Read-only \"Profession\" field */\n    input[disabled] {\n      background: #f3f3f3;\n      color: #888;\n    }\n    button {\n      background: var(--green);\n      color: white;\n      border: none;\n      padding: 12px 24px;\n      border-radius: 6px;\n      font-weight: 700;\n      font-size: 15px;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      display: block;\n      margin: 2rem auto 0;\n      letter-spacing: 0.5px;\n    }\n    button:hover {\n      background: var(--green-hover);\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px rgba(46, 125, 50, 0.3);\n    }\n    #result {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      text-align: center;\n      margin-top: 2rem;\n      box-shadow: 0 2px 8px rgba(8, 30, 47, 0.1);\n    }\n    .correct {\n      border-left: 4px solid var(--green);\n      background: #F0F9FF;\n    }\n    .incorrect {\n      border-left: 4px solid var(--red);\n    }\n    .correct-answer {\n      background: #E8F5E9 !important;\n      border: 1px solid var(--green);\n      border-radius: 4px;\n      padding: 2px 4px;\n      margin-top: 0.5rem;\n      display: inline-block;\n    }\n    @media (max-width: 600px) {\n      body {\n        padding: 1rem;\n      }\n      .question {\n        padding: 1rem;\n      }\n      button {\n        width: 100%;\n        padding: 14px 20px;\n      }\n      #timer {\n        top: 10px;\n        right: 10px;\n        font-size: 14px;\n      }\n    }\n  </style>\n</head>\n<body>\n  <!-- Title Page -->\n  <div id=\"titlePage\">\n    <h1>Fill company/leads' data in CRM</h1>\n    <div class=\"quiz-info\">\n      <div class=\"info-item\">\n        <span>Questions:</span>\n        <strong>15</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Time Limit:</span>\n        <strong>5 minutes</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Passing Score:</span>\n        <strong>80%</strong>\n      </div>\n      <button id=\"startExamBtn\" onclick=\"startQuiz()\">Start Exam</button>\n    </div>\n  </div>\n\n  <!-- Quiz Container -->\n  <div id=\"quizContainer\" class=\"hidden\">\n    <div id=\"timer\">00:00</div>\n    <h1>Fill company/leads' data in CRM</h1>\n    <form id=\"examForm\">\n      <!-- User Data Block (not scored) -->\n      <div class=\"question\" data-points=\"0\">\n        <h3>Enter Your Information</h3>\n        <label>\n          Your Name:\n          <input type=\"text\" name=\"fullName\" placeholder=\"e.g., John Doe\">\n        </label>\n        <label>\n          Your Profession:\n          <input type=\"text\" name=\"profession\" value=\"Lead Generator\" disabled>\n        </label>\n        <label>\n          Your Recruiter:\n          <select name=\"recruiter\">\n            <option value=\"Anastasia Fadeeva\">Anastasia Fadeeva</option>\n            <option value=\"Elena Ermakova\">Elena Ermakova</option>\n            <option value=\"Anna Aleksandrova\">Anna Aleksandrova</option>\n            <option value=\"Sabina Gasanova\">Sabina Gasanova</option>\n          </select>\n        </label>\n      </div>\n      \n      <!-- Q1 (Multi Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>1. Which fields are used to perform the duplicate check before adding a new company?</h3>\n        <label><input type=\"checkbox\" name=\"q1\" value=\"companyName\" data-correct=\"true\"> Company Name</label>\n        <label><input type=\"checkbox\" name=\"q1\" value=\"websiteURL\" data-correct=\"true\"> Website URL</label>\n        <label><input type=\"checkbox\" name=\"q1\" value=\"linkedinURL\" data-correct=\"true\"> LinkedIn Profile URL</label>\n        <label><input type=\"checkbox\" name=\"q1\" value=\"companySize\"> Company Size</label>\n        <label><input type=\"checkbox\" name=\"q1\" value=\"industry\"> Industry</label>\n      </div>\n\n      <!-- Q2 (Multi Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>2. When adding a new company to the CRM, which steps are necessary?</h3>\n        <label><input type=\"checkbox\" name=\"q2\" value=\"googleSearch\" data-correct=\"true\"> Conduct a thorough Google search</label>\n        <label><input type=\"checkbox\" name=\"q2\" value=\"fillFields\" data-correct=\"true\"> Fill in all required fields (Name, LinkedIn, Website, Company Size, Industry, SubIndustry)</label>\n        <label><input type=\"checkbox\" name=\"q2\" value=\"dailyQuota\" data-correct=\"true\"> Meet the minimum daily quota of 50 companies</label>\n        <label><input type=\"checkbox\" name=\"q2\" value=\"assignedCountry\" data-correct=\"true\"> Add companies exclusively from your assigned country</label>\n        <label><input type=\"checkbox\" name=\"q2\" value=\"anyCountry\"> Add companies from any country without restrictions</label>\n      </div>\n\n      <!-- Q3 (Single Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>3. What is the correct diversity guideline when adding contacts?</h3>\n        <label><input type=\"radio\" name=\"q3\" value=\"guideline\" data-correct=\"true\">\n          Avoid adding contacts who are Hindu, Arab, or of color unless pre‑approved as African American leaders in your assigned country\n        </label>\n        <label><input type=\"radio\" name=\"q3\" value=\"allBackgrounds\"> Add contacts from all backgrounds without restrictions</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"sameEthnicity\"> Only add contacts of the same ethnicity as the company owner</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"alwaysAdd\"> Always add contacts who are of color regardless of role</label>\n      </div>\n\n      <!-- Q4 (Single Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>4. Which criterion is primarily used when identifying potential leads within a company?</h3>\n        <label><input type=\"radio\" name=\"q4\" value=\"collegeDegree\"> Lead has a college degree</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"yearsAtCompany\"> Lead has been with the company for over 5 years</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"connectionsAndRole\" data-correct=\"true\">\n          Lead has over 100 LinkedIn connections and holds a relevant position\n        </label>\n        <label><input type=\"radio\" name=\"q4\" value=\"randomSelection\"> Lead is randomly selected</label>\n      </div>\n\n      <!-- Q5 (Single Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>5. When adding new leads to a company, what is the maximum number of leads you should add per company?</h3>\n        <label><input type=\"radio\" name=\"q5\" value=\"10\"> 10</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"3\"> 3</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"7\"> 7</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"5\" data-correct=\"true\"> 5</label>\n      </div>\n\n      <!-- Q6 (Single Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>6. What is the default status assigned to a new lead in the CRM?</h3>\n        <label><input type=\"radio\" name=\"q6\" value=\"sentRequest\" data-correct=\"true\"> Sent Request</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"connected\"> Connected</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"interested\"> Interested</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"followUp\"> Follow Up</label>\n      </div>\n\n      <!-- Q7 (Single Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>7. Which status reflects that the lead has accepted your connection request?</h3>\n        <label><input type=\"radio\" name=\"q7\" value=\"sentRequest\"> Sent Request</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"connected\" data-correct=\"true\"> Connected</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"interested\"> Interested</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"notInterested\"> Not Interested</label>\n      </div>\n\n      <!-- Q8 (Single Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>8. Which criterion is commonly used to segment leads in the CRM?</h3>\n        <label><input type=\"radio\" name=\"q8\" value=\"leadStatus\" data-correct=\"true\"> Lead Status</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"employeeSalary\"> Employee Salary</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"randomID\"> Random ID</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"colorCoding\"> Color Coding</label>\n      </div>\n\n      <!-- Q9 (Single Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>9. In the \"Review and Update\" process, which action indicates that a company’s information has been refreshed?</h3>\n        <label><input type=\"radio\" name=\"q9\" value=\"noteUpdated\" data-correct=\"true\"> Add a note stating \"Updated\"</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"ignoreOutdated\"> Ignore outdated information</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"deleteRecord\"> Delete the company record</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"changeStatus\"> Change status to \"Connected\"</label>\n      </div>\n\n      <!-- Q10 (Single Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>10. Which field is NOT required on the \"Needed Candidate\" tab?</h3>\n        <label><input type=\"radio\" name=\"q10\" value=\"department\"> Department</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"profession\"> Profession</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"clientTools\"> Client Needed Tools</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"quantity\"> Quantity</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"candidateInterviewNotes\" data-correct=\"true\"> Candidate Interview Notes</label>\n      </div>\n\n      <!-- Q11 (Multi Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>11. Which components are included in the Communication section of the CRM?</h3>\n        <label><input type=\"checkbox\" name=\"q11\" value=\"commDate\" data-correct=\"true\"> Date of Communication</label>\n        <label><input type=\"checkbox\" name=\"q11\" value=\"commType\" data-correct=\"true\"> Communication Type</label>\n        <label><input type=\"checkbox\" name=\"q11\" value=\"commChannel\" data-correct=\"true\"> Communication Channel</label>\n        <label><input type=\"checkbox\" name=\"q11\" value=\"placementValue\" data-correct=\"true\"> Placement Value</label>\n        <label><input type=\"checkbox\" name=\"q11\" value=\"senderName\"> Sender's Name</label>\n      </div>\n\n      <!-- Q12 (Multi Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>12. When reviewing and updating a company's information, which actions should be performed?</h3>\n        <label><input type=\"checkbox\" name=\"q12\" value=\"changeStatus\"> Change status to \"Connected\"</label>\n        <label><input type=\"checkbox\" name=\"q12\" value=\"activeAgents\" data-correct=\"true\"> Enter your details in the \"Active Agents\" field</label>\n        <label><input type=\"checkbox\" name=\"q12\" value=\"linkedinAccount\" data-correct=\"true\"> Select your LinkedIn account</label>\n        <label><input type=\"checkbox\" name=\"q12\" value=\"updateInfo\" data-correct=\"true\"> Update company information using LinkedIn</label>\n        <label><input type=\"checkbox\" name=\"q12\" value=\"addNote\" data-correct=\"true\"> Add a note stating \"Updated\" and click \"Update\"</label>\n      </div>\n\n      <!-- Q13 (Multi Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>13. What are the guidelines for adding LinkedIn links for leads?</h3>\n        <label><input type=\"checkbox\" name=\"q13\" value=\"shortenedURLs\"> Use shortened URLs</label>\n        <label><input type=\"checkbox\" name=\"q13\" value=\"directLink\" data-correct=\"true\"> Add only direct LinkedIn page links</label>\n        <label><input type=\"checkbox\" name=\"q13\" value=\"backupImages\"> Add both links and images for backup</label>\n        <label><input type=\"checkbox\" name=\"q13\" value=\"noScreenshots\" data-correct=\"true\"> Do not use screenshots</label>\n      </div>\n\n      <!-- Q14 (Single Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>14. How frequently should companies added to the CRM be reviewed and updated?</h3>\n        <label><input type=\"radio\" name=\"q14\" value=\"monthly\"> Every month</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"sixMonths\"> Every six months</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"threeMonths\" data-correct=\"true\"> Every three months</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"yearly\"> Once a year</label>\n      </div>\n\n      <!-- Q15 (Single Answer) -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>15. After completing the \"Needed Candidate\" tab, what status change should be made?</h3>\n        <label><input type=\"radio\" name=\"q15\" value=\"neededCandidate\" data-correct=\"true\">\n          Change lead status from \"Sent Request\" to \"Needed Candidate\"\n        </label>\n        <label><input type=\"radio\" name=\"q15\" value=\"hired\"> Change lead status to \"Hired\"</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"followUp\"> Change lead status to \"Follow Up\"</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"connected\"> Change lead status to \"Connected\"</label>\n      </div>\n\n      <button id=\"submitBtn\" type=\"button\" onclick=\"calculateScore()\">Submit Exam</button>\n    </form>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    // Fisher–Yates shuffle function\n    function shuffle(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      return array;\n    }\n    // Randomize answer labels (excluding the user data block)\n    function randomizeAnswers() {\n      const questions = document.querySelectorAll('.question[data-points]:not([data-points=\"0\"])');\n      questions.forEach(question => {\n        const labels = Array.from(question.querySelectorAll('label'));\n        const shuffled = shuffle(labels);\n        shuffled.forEach(label => label.parentNode.removeChild(label));\n        const heading = question.querySelector('h3');\n        shuffled.forEach(label => heading.parentNode.appendChild(label));\n      });\n    }\n    let timer;\n    let seconds = 0;\n    const timeLimit = 300; // 5 minutes\n    const examName = \"Fill company/leads' data in CRM\";\n    function startQuiz() {\n      document.getElementById('titlePage').classList.add('hidden');\n      document.getElementById('quizContainer').classList.remove('hidden');\n      randomizeAnswers();\n      startTimer();\n    }\n    function startTimer() {\n      timer = setInterval(() => {\n        seconds++;\n        const minutes = Math.floor(seconds / 60);\n        const rem = seconds % 60;\n        document.getElementById('timer').textContent =\n          String(minutes).padStart(2, '0') + \":\" + String(rem).padStart(2, '0');\n        if (seconds >= timeLimit) {\n          clearInterval(timer);\n          calculateScore(true);\n        }\n      }, 1000);\n    }\n    function calculateScore(timeout = false) {\n      const submitButton = document.getElementById('submitBtn');\n      if (submitButton) {\n        submitButton.style.display = 'none';\n      }\n      clearInterval(timer);\n      let totalPoints = 0;\n      let maxPoints = 0;\n      const questions = document.querySelectorAll('.question');\n      questions.forEach(question => {\n        const points = parseInt(question.dataset.points) || 1;\n        maxPoints += points;\n        if (points === 0) return;\n        let correct = true;\n        const inputs = question.querySelectorAll('input');\n        let selectedValues = [];\n        let correctValues = [];\n        inputs.forEach(inp => {\n          if (inp.checked) selectedValues.push(inp.value);\n          if (inp.dataset.correct === \"true\") correctValues.push(inp.value);\n        });\n        if (\n          selectedValues.length !== correctValues.length ||\n          !selectedValues.every(val => correctValues.includes(val))\n        ) {\n          correct = false;\n        }\n        if (correct) {\n          totalPoints += points;\n          question.classList.add('correct');\n        } else {\n          question.classList.add('incorrect');\n          inputs.forEach(inp => {\n            if (inp.dataset.correct === \"true\") {\n              inp.parentElement.classList.add('correct-answer');\n            }\n          });\n        }\n      });\n      const percentage = ((totalPoints / maxPoints) * 100).toFixed(1);\n      const timeUsed = `${Math.floor(seconds / 60)}m ${seconds % 60}s`;\n      let resultsHTML = `\n        <h3>Exam Results</h3>\n        <p>Your score: ${totalPoints} / ${maxPoints} (${percentage}%)</p>\n        <p>Time used: ${timeUsed}</p>\n        ${percentage >= 80 ? \"Congratulations! You passed!\" : \"Try again! Review your mistakes below.\"}\n        ${timeout ? \"<p class='warning'>Time limit exceeded!</p>\" : \"\"}\n      `;\n      resultsHTML += `\n        <button type=\"button\" onclick=\"location.reload()\">Retry</button>\n        <button type=\"button\" onclick=\"window.location.href='https://hook.eu1.make.com/jcjl176nvrhlm4ag7qiixjzssxqdbl5n'\">Read Again</button>\n        <button type=\"button\" id=\"taskButton\" onclick=\"loadTask()\">Task</button>\n      `;\n      document.getElementById('result').innerHTML = resultsHTML;\n      \n      const fullName = document.querySelector('[name=\"fullName\"]')?.value.trim() || \"\";\n      const profession = document.querySelector('[name=\"profession\"]')?.value.trim() || \"\";\n      const recruiter = document.querySelector('[name=\"recruiter\"]')?.value.trim() || \"\";\n      const postData = {\n        fullName,\n        profession,\n        recruiter,\n        day: \"4\",\n        examName,\n        scoreObtained: totalPoints,\n        scoreTotal: maxPoints,\n        timeUsed: seconds,\n        timeTotal: timeLimit\n      };\n      fetch(\"https://hook.eu1.make.com/2yp4rtezjxi2o6fi2jouedn3i7sgxss1\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(postData)\n      })\n      .then(res => res.text())\n      .then(data => console.log(\"POST response:\", data))\n      .catch(err => console.error(\"Error in POST:\", err));\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n    // loadTask() replaces the exam view with task instructions and adds an optional link input and a Task Completed checkbox.\n    function loadTask() {\n      const taskMarkdown = `# 🛠 Objective\n\nThis task is designed to test your ability to install the necessary extensions, extract LinkedIn profile data, and ensure the accuracy and organization of the extracted information in the CRM. You will perform real-world tasks involving LinkedIn data extraction and CRM entry.\n\n---\n\n# 🔹 Task 1: Installing and Setting Up Required Extensions\n\n## ✅ Steps to Complete:\n1. **Install the Extensions:**\n   - **RE Extension for LinkedIn:**  \n     Download and extract the RE Extension for LinkedIn, then load it into Chrome.\n   - **SalesQL Extension:**  \n     Install SalesQL from the Chrome Web Store and log in using the provided credentials.\n2. **Take a Screenshot:**\n   - Capture a screenshot of the Chrome extensions page showing both extensions successfully installed.\n3. **Pin the Extensions:**\n   - Pin both extensions to your Chrome toolbar for easy access.\n\n## ✏️ Expected Output:\n- A screenshot displaying both extensions correctly installed and pinned in the Chrome toolbar.\n\n---\n\n# 🔹 Task 2: Extract LinkedIn Profile Data Using Both Extensions\n\n## ✅ Steps to Complete:\n1. **Choose a LinkedIn Profile:**\n   - Select a verified profile relevant to your target audience (e.g., CEOs, Marketing Directors, HR Managers).\n2. **Extract Data Using SalesQL Extension:**\n   - Extract the following information:\n     - **Email**\n     - **Phone Number**\n   - Verify that the data appears in the SalesQL window and click **\"Reveal info & Add\"** to capture the details.\n3. **Extract Data Using RE Extension:**\n   - Click the RE Extension button to extract all available data:\n     - **Name**\n     - **Position**\n     - **Company**\n     - **Industry**\n     - **Location**\n   - Confirm that the extracted data appears correctly in the CRM.\n4. **Record Missing Information:**\n   - Note any missing data and plan to add it manually if not captured by the extensions.\n\n## ✏️ Expected Output:\n- Confirmation that the data is correctly extracted.\n- A screenshot of the extracted data in the CRM, showing email, phone number, job title, company name, and other relevant fields.\n\n---\n\n# 🔹 Task 3: Verify and Correct Extracted Data\n\n## ✅ Steps to Complete:\n1. **Review Extracted Data:**\n   - Check for any discrepancies or missing information.\n2. **Edit and Update Data:**\n   - Edit the CRM details manually if needed.\n3. **Log the Lead into the CRM:**\n   - Add a new lead or update an existing company record.\n\n## ✏️ Expected Output:\n- Updated lead details in the CRM after verification.\n- A screenshot of the CRM lead card showing all fields correctly filled.\n\n---\n\n# 🔹 Task 4: Handling Missing or Incorrect Data\n\n## ✅ Steps to Complete:\n1. **Check for Missing Data:**\n   - Verify whether any data was missed by the extensions.\n2. **Add Missing Details:**\n   - Manually input missing data into the CRM.\n3. **Correct Discrepancies:**\n   - Update the CRM to correct any discrepancies.\n4. **Review the Notes Section:**\n   - Resolve any issues listed in the CRM’s Notes section.\n\n## ✏️ Expected Output:\n- A screenshot of the updated CRM lead card.\n- A summary of the steps taken to correct the data.\n\n---\n\n# 📌 Submission Instructions\n\n- **Document Format:** Google Docs or Word.\n- **Structure the Document as Follows:**\n  1. **Task 1:** Installation and Setup (Screenshot of Extensions)\n  2. **Task 2:** Data Extraction (Screenshot of Extracted Data in CRM)\n  3. **Task 3:** Data Verification & Correction (Screenshot of Updated CRM Lead Card, if applicable)\n  4. **Task 4:** Handling Missing or Incorrect Data (Screenshot and Summary)\n\n---\n\n# 💡 Bonus Challenge\n- **Troubleshooting:**  \n  Explain any troubleshooting steps you took to resolve issues during the extraction process.\n- **Enhancements:**  \n  List any additional tools or tips you would use to improve the data extraction process.\n\nBy completing this task, you will demonstrate your ability to extract and manage LinkedIn profile data in CRM systems while ensuring accuracy and data security.`;\n      \n      const parsedMarkdown = parseMarkdown(taskMarkdown);\n      document.body.innerHTML = `\n        <div style=\"font-family: 'Open Sans', sans-serif; background: #F8F9FA; padding: 2rem;\">\n          ${parsedMarkdown}\n          <div style=\"margin-top: 2rem;\">\n            <label for=\"taskLinkInput\" style=\"font-weight: bold;\">Optional link:</label>\n            <input type=\"text\" id=\"taskLinkInput\" placeholder=\"https://docs.google.com/...\" style=\"width: 100%; padding: 8px; margin: 4px 0 1rem;\">\n            <input type=\"checkbox\" id=\"taskCompletedCheckbox\">\n            <label for=\"taskCompletedCheckbox\">Task Completed</label>\n          </div>\n        </div>\n      `;\n      \n      const checkbox = document.getElementById(\"taskCompletedCheckbox\");\n      checkbox.addEventListener(\"change\", function() {\n        if (checkbox.checked) {\n          const taskLink = document.getElementById(\"taskLinkInput\").value.trim() || \"\";\n          fetch(\"https://hook.eu1.make.com/dy57247xgkw7criy6ind4j78ej3yqrx7\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ link: taskLink })\n          })\n          .then(response => response.text())\n          .then(data => {\n            console.log(\"Task completed webhook sent:\", data);\n            checkbox.disabled = true;\n          })\n          .catch(err => console.error(\"Error sending task completed webhook:\", err));\n        }\n      });\n    }\n    \n    // Markdown parser: converts markdown headings into collapsible <details> elements (collapsed by default)\n    function parseMarkdown(markdownText) {\n      const lines = markdownText.split('\\n');\n      let html = \"\";\n      const stack = [];\n      lines.forEach(line => {\n        const match = line.match(/^(#{1,4})\\s+(.*)/);\n        if (match) {\n          const level = match[1].length;\n          const text = match[2];\n          while (stack.length && stack[stack.length - 1] >= level) {\n            html += \"</details>\";\n            stack.pop();\n          }\n          // Create a details element without \"open\" so it remains collapsed\n          html += `<details><summary>${text}</summary>`;\n          stack.push(level);\n        } else {\n          html += line + \"<br>\";\n        }\n      });\n      while (stack.length) {\n        html += \"</details>\";\n        stack.pop();\n      }\n      return html;\n    }\n  </script>\n</body>\n</html>",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-type",
                "value": "text/html"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -140,
        -160
      ],
      "id": "49bbc745-193d-46cb-b143-feef39629836",
      "name": "Respond to Webhook",
      "notesInFlow": false
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "24be84db-8010-4798-bad3-925a443daded",
  "triggerCount": 0,
  "tags": []
}