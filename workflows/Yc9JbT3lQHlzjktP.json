{
  "createdAt": "2025-06-11T08:45:16.010Z",
  "updatedAt": "2025-06-11T08:45:19.230Z",
  "id": "Yc9JbT3lQHlzjktP",
  "name": "AppTest-Agent_Sim",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "path": "onboarding/promptengineering/tests/AgentSim",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -180,
        -60
      ],
      "id": "f258b677-c625-4723-ab6a-861a29a4cff2",
      "name": "Webhook",
      "webhookId": "8d7586da-eb0c-4a01-92b3-4e435f8f9ecd"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <link type=\"image/png\" sizes=\"16x16\" rel=\"icon\" href=\"https://i.postimg.cc/gJf9MgWR/icons8-32.png\">\n  <meta charset=\"UTF-8\">\n  <title>Agent Sim</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    :root {\n      --deep-blue: #081E2F;\n      --primary-yellow: #FCB305;\n      --red: #D32F2F;\n      --red-hover: #C62828;\n      --green: #2E7D32;\n      --green-hover: #1B5E20;\n      --blue: #197502;\n      --blue-dark: #1555C0;\n      --blue-light: #4245F5;\n    }\n    body {\n      font-family: 'Open Sans', sans-serif;\n      background: #F8F9FA;\n      padding: 2rem;\n      max-width: 800px;\n      margin: 0 auto;\n      min-height: 100vh;\n    }\n    #titlePage {\n      text-align: center;\n      padding: 3rem 1rem;\n    }\n    #titlePage h1 {\n      font-size: 32px;\n      color: var(--deep-blue);\n      margin-bottom: 1.5rem;\n    }\n    .quiz-info {\n      background: white;\n      padding: 2rem;\n      border-radius: 12px;\n      box-shadow: 0 4px 12px rgba(8,30,47,0.1);\n      margin: 2rem auto;\n      max-width: 500px;\n    }\n    .info-item {\n      font-size: 16px;\n      color: #4A4A4A;\n      margin: 1rem 0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    #timer {\n      position: fixed;\n      top: 20px;\n      right: 20px;\n      background: var(--green);\n      color: white;\n      padding: 8px 16px;\n      border-radius: 20px;\n      font-weight: 600;\n      box-shadow: 0 2px 6px rgba(46,125,50,0.2);\n    }\n    .hidden { display: none; }\n    .question {\n      background: white;\n      border-radius: 8px;\n      padding: 1.5rem;\n      margin-bottom: 1.5rem;\n      box-shadow: 0 2px 8px rgba(8,30,47,0.1);\n      transition: all 0.3s ease;\n    }\n    .question h3 {\n      font-size: 16px;\n      font-weight: 600;\n      color: var(--deep-blue);\n      margin: 0 0 1rem 0;\n    }\n    label {\n      display: block;\n      margin: 0.5rem 0;\n      padding: 0.75rem;\n      border-radius: 4px;\n      font-size: 14px;\n      color: #4A4A4A;\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n    label:hover { background: rgba(25,118,210,0.04); }\n    /* Radio buttons (single-answer) */\n    input[type=\"radio\"] {\n      margin-right: 0.75rem;\n      accent-color: var(--green);\n      border-radius: 50%;\n      width: 16px;\n      height: 16px;\n    }\n    input[type=\"text\"],\n    input[type=\"number\"] {\n      padding: 0.5rem;\n      border: 1px solid #DEE2E6;\n      border-radius: 4px;\n      font-size: 14px;\n      width: 100%;\n      box-sizing: border-box;\n    }\n    /* Заменяем заблокированное поле профессии на выпадающий список */\n    /* Было: <input type=\"text\" name=\"profession\" value=\"Prompt Engineer\" disabled> */\n    /* Стало: */\n    select {\n      width: 100%;\n      padding: 0.5rem;\n      border: 1px solid #DEE2E6;\n      border-radius: 4px;\n      font-size: 14px;\n      background: white;\n      box-sizing: border-box;\n    }\n    button {\n      background: var(--green);\n      color: white;\n      border: none;\n      padding: 12px 24px;\n      border-radius: 6px;\n      font-weight: 700;\n      font-size: 15px;\n      cursor: pointer;\n      transition: all 0.3s ease;\n      display: block;\n      margin: 2rem auto 0;\n      letter-spacing: 0.5px;\n    }\n    button:hover {\n      background: var(--green-hover);\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px rgba(46,125,50,0.3);\n    }\n    #result {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      text-align: center;\n      margin-top: 2rem;\n      box-shadow: 0 2px 8px rgba(8,30,47,0.1);\n    }\n    .correct {\n      border-left: 4px solid var(--green);\n      background: #F0F9FF;\n    }\n    .incorrect {\n      border-left: 4px solid var(--red);\n    }\n    .correct-answer {\n      background: #E8F5E9 !important;\n      border: 1px solid var(--green);\n      border-radius: 4px;\n      padding: 2px 4px;\n      margin-top: 0.5rem;\n      display: inline-block;\n    }\n    @media (max-width: 600px) {\n      body { padding: 1rem; }\n      .question { padding: 1rem; }\n      button { width: 100%; padding: 14px 20px; }\n      #timer { top: 10px; right: 10px; font-size: 14px; }\n    }\n  </style>\n</head>\n<body>\n  <!-- Title Page -->\n  <div id=\"titlePage\">\n    <h1>Agent Sim</h1>\n    <div class=\"quiz-info\">\n      <div class=\"info-item\">\n        <span>Questions:</span>\n        <strong>15</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Time Limit:</span>\n        <strong>5 minutes</strong>\n      </div>\n      <div class=\"info-item\">\n        <span>Passing Score:</span>\n        <strong>80%</strong>\n      </div>\n      <button id=\"startExamBtn\" onclick=\"startQuiz()\">Start Exam</button>\n    </div>\n  </div>\n\n  <!-- Quiz Container -->\n  <div id=\"quizContainer\" class=\"hidden\">\n    <div id=\"timer\">00:00</div>\n    <h1>Agent Sim</h1>\n    <form id=\"examForm\">\n      <!-- User Data Block (not scored) -->\n      <div class=\"question\" data-points=\"0\">\n        <h3>Enter Your Information</h3>\n        <label>\n          Your Name:\n          <input type=\"text\" name=\"fullName\" placeholder=\"e.g., John Doe\">\n        </label>\n        <label>\n          Your Profession:\n          <!-- Выпадающий список для выбора профессии -->\n          <select name=\"profession\">\n            <option value=\"\">Select your profession</option>\n            <option value=\"3d designer\">3D Designer</option>\n            <option value=\"account manager\">Account Manager</option>\n            <option value=\"affiliate manager\">Affiliate Manager</option>\n            <option value=\"analyst\">Analyst</option>\n            <option value=\"animator\">Animator</option>\n            <option value=\"back end developer\">Back End Developer</option>\n            <option value=\"chat operator\">Chat Operator</option>\n            <option value=\"content manager\">Content Manager</option>\n            <option value=\"copywriter\">Copywriter</option>\n            <option value=\"email marketer\">Email Marketer</option>\n            <option value=\"event manager\">Event Manager</option>\n            <option value=\"financial manager\">Financial Manager</option>\n            <option value=\"front end developer\">Front End Developer</option>\n            <option value=\"full stack developer\">Full Stack Developer</option>\n            <option value=\"graphic designer\">Graphic Designer</option>\n            <option value=\"hr manager\">HR Manager</option>\n            <option value=\"illustrator\">Illustrator</option>\n            <option value=\"influencer manager\">Influencer Manager</option>\n            <option value=\"interior designer\">Interior Designer</option>\n            <option value=\"investment manager\">Investment Manager</option>\n            <option value=\"lead generator\">Lead Generator</option>\n            <option value=\"linkbuilder\">Linkbuilder</option>\n            <option value=\"media buyer\">Media Buyer</option>\n            <option value=\"mobile developer\">Mobile Developer</option>\n            <option value=\"mobile video editor\">Mobile Video Editor</option>\n            <option value=\"motion designer\">Motion Designer</option>\n            <option value=\"personal assistant\">Personal Assistant</option>\n            <option value=\"ppc specialist\">PPC Specialist</option>\n            <option value=\"pr manager\">PR Manager</option>\n            <option value=\"project manager\">Project Manager</option>\n            <option value=\"proofreader\">Proofreader</option>\n            <option value=\"qa\">QA</option>\n            <option value=\"recruiter\">Recruiter</option>\n            <option value=\"sales manager\">Sales Manager</option>\n            <option value=\"seo manager\">SEO Manager</option>\n            <option value=\"social media manager\">Social Media Manager</option>\n            <option value=\"system administrator\">System Administrator</option>\n            <option value=\"targetologist\">Targetologist</option>\n            <option value=\"tourism manager\">Tourism Manager</option>\n            <option value=\"ui/ux designer\">UI/UX Designer</option>\n            <option value=\"video editor\">Video Editor</option>\n            <option value=\"web designer\">Web Designer</option>\n            <option value=\"wordpress designer\">WordPress Designer</option>\n          </select>\n        </label>\n        <label>\n          Your Recruiter:\n          <select name=\"recruiter\">\n            <option value=\"Anastasia Fadeeva\">Anastasia Fadeeva</option>\n            <option value=\"Elena Ermakova\">Elena Ermakova</option>\n            <option value=\"Anna Aleksandrova\">Anna Aleksandrova</option>\n            <option value=\"Sabina Gasanova\">Sabina Gasanova</option>\n          </select>\n        </label>\n      </div>\n\n      <!-- Question 1 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 1: What is the fundamental concept behind agent simulation?</h3>\n        <label><input type=\"radio\" name=\"q1\" value=\"A\"> A) Creating realistic 3D environments for virtual reality.</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"B\"> B) Building complex algorithms for data encryption.</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"C\" data-correct=\"true\"> C) Modeling the behavior of autonomous entities or agents within a system to understand its dynamics.</label>\n        <label><input type=\"radio\" name=\"q1\" value=\"D\"> D) Developing advanced robotics for automated manufacturing.</label>\n      </div>\n\n      <!-- Question 2 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 2: Agent simulation is primarily used to:</h3>\n        <label><input type=\"radio\" name=\"q2\" value=\"A\"> A) Replace real-world systems entirely.</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"B\" data-correct=\"true\"> B) Predict and analyze the behavior of complex systems by simulating individual agents.</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"C\"> C) Create video games for entertainment purposes.</label>\n        <label><input type=\"radio\" name=\"q2\" value=\"D\"> D) Develop new programming languages for AI.</label>\n      </div>\n\n      <!-- Question 3 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 3: How does Artificial Intelligence (AI) play a role in mimicking real-world behavior in Agent Sim?</h3>\n        <label><input type=\"radio\" name=\"q3\" value=\"A\"> A) AI is not used in Agent Sim, as it relies solely on pre-programmed rules.</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"B\" data-correct=\"true\"> B) AI algorithms, particularly machine learning, enable agents to learn, adapt, and exhibit more realistic and complex behaviors.</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"C\"> C) AI is only used for visualizing the simulation results, not for agent behavior itself.</label>\n        <label><input type=\"radio\" name=\"q3\" value=\"D\"> D) AI is used to control the entire simulation environment, but not individual agents.</label>\n      </div>\n\n      <!-- Question 4 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 4: Which AI technique is most commonly used to enable agents to learn and adapt in Agent Sim?</h3>\n        <label><input type=\"radio\" name=\"q4\" value=\"A\"> A) Rule-based systems.</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"B\" data-correct=\"true\"> B) Genetic algorithms and reinforcement learning.</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"C\"> C) Symbolic AI.</label>\n        <label><input type=\"radio\" name=\"q4\" value=\"D\"> D) Expert systems.</label>\n      </div>\n\n      <!-- Question 5 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 5: Which of the following is a KEY principle of Agent Sim?</h3>\n        <label><input type=\"radio\" name=\"q5\" value=\"A\"> A) Centralized control of all agents.</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"B\" data-correct=\"true\"> B) Agents operate autonomously, making decisions based on their environment and rules.</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"C\"> C) Agents are perfectly predictable and follow a linear path.</label>\n        <label><input type=\"radio\" name=\"q5\" value=\"D\"> D) Agents have no memory or ability to learn from past experiences.</label>\n      </div>\n\n      <!-- Question 6 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 6: Interaction and communication between agents in Agent Sim are important because:</h3>\n        <label><input type=\"radio\" name=\"q6\" value=\"A\"> A) They simplify the simulation setup and reduce complexity.</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"B\" data-correct=\"true\"> B) They allow for the emergence of complex system-level behaviors from individual agent actions.</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"C\"> C) They make simulations easier to visualize and understand.</label>\n        <label><input type=\"radio\" name=\"q6\" value=\"D\"> D) They are not necessary for realistic simulation, agents can act independently.</label>\n      </div>\n\n      <!-- Question 7 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 7: Environmental awareness in Agent Sim refers to:</h3>\n        <label><input type=\"radio\" name=\"q7\" value=\"A\"> A) Agents being consciously aware of their surroundings in a human-like way.</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"B\" data-correct=\"true\"> B) Agents perceiving and reacting to changes in their simulated environment based on predefined rules and sensors.</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"C\"> C) The graphical fidelity of the simulated environment.</label>\n        <label><input type=\"radio\" name=\"q7\" value=\"D\"> D) The ability of the simulation to run on environmentally friendly hardware.</label>\n      </div>\n\n      <!-- Question 8 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 8: In training applications, Agent Sim can be used to:</h3>\n        <label><input type=\"radio\" name=\"q8\" value=\"A\"> A) Train real-world agents directly without any simulation.</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"B\" data-correct=\"true\"> B) Create safe and cost-effective environments for training humans or AI agents in complex scenarios.</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"C\"> C) Replace traditional classroom training methods entirely.</label>\n        <label><input type=\"radio\" name=\"q8\" value=\"D\"> D) Only train agents in simple, non-complex environments.</label>\n      </div>\n\n      <!-- Question 9 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 9: How does Agent Sim contribute to data modeling?</h3>\n        <label><input type=\"radio\" name=\"q9\" value=\"A\"> A) Agent Sim reduces the need for data collection in real-world scenarios.</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"B\" data-correct=\"true\"> B) It generates synthetic data that can be used to train AI models and understand system dynamics where real-world data is scarce or expensive to obtain.</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"C\"> C) It primarily focuses on visualizing existing real-world datasets.</label>\n        <label><input type=\"radio\" name=\"q9\" value=\"D\"> D) It is not useful for data modeling purposes.</label>\n      </div>\n\n      <!-- Question 10 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 10: In healthcare, Agent Sim can be applied to:</h3>\n        <label><input type=\"radio\" name=\"q10\" value=\"A\"> A) Directly treat patients without human intervention.</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"B\" data-correct=\"true\"> B) Model the spread of diseases and optimize resource allocation in hospitals.</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"C\"> C) Replace doctors and nurses with simulated agents.</label>\n        <label><input type=\"radio\" name=\"q10\" value=\"D\"> D) Only be used for administrative tasks in hospitals.</label>\n      </div>\n\n      <!-- Question 11 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 11: Which of the following is a potential use case for Agent Sim in the finance industry?</h3>\n        <label><input type=\"radio\" name=\"q11\" value=\"A\"> A) Designing new financial products without risk assessment.</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"B\" data-correct=\"true\"> B) Simulating market dynamics and the impact of trading strategies.</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"C\"> C) Automating all financial transactions without human oversight.</label>\n        <label><input type=\"radio\" name=\"q11\" value=\"D\"> D) Replacing human financial analysts entirely.</label>\n      </div>\n\n      <!-- Question 12 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 12: In transportation, Agent Sim can be used to:</h3>\n        <label><input type=\"radio\" name=\"q12\" value=\"A\"> A) Physically build and test new transportation infrastructure.</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"B\" data-correct=\"true\"> B) Optimize traffic flow, simulate autonomous vehicle behavior, and plan urban development.</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"C\"> C) Replace all human drivers with simulated agents.</label>\n        <label><input type=\"radio\" name=\"q12\" value=\"D\"> D) Only be used for logistics and supply chain management.</label>\n      </div>\n\n      <!-- Question 13 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 13: What is a significant potential benefit of using Agent Sim?</h3>\n        <label><input type=\"radio\" name=\"q13\" value=\"A\"> A) It always perfectly predicts real-world outcomes.</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"B\" data-correct=\"true\"> B) It allows for rapid prototyping, experimentation, and analysis of complex systems in a virtual environment.</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"C\"> C) It eliminates the need for real-world testing and validation.</label>\n        <label><input type=\"radio\" name=\"q13\" value=\"D\"> D) It is always cheaper than real-world experiments, regardless of complexity.</label>\n      </div>\n\n      <!-- Question 14 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 14: A key challenge of Agent Sim is:</h3>\n        <label><input type=\"radio\" name=\"q14\" value=\"A\"> A) The lack of available software and tools for development.</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"B\" data-correct=\"true\"> B) Ensuring the simulation accurately reflects the complexities of the real world and validating the simulation results.</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"C\"> C) The simplicity of creating and running agent-based simulations.</label>\n        <label><input type=\"radio\" name=\"q14\" value=\"D\"> D) The overabundance of real-world data, making simulation unnecessary.</label>\n      </div>\n\n      <!-- Question 15 -->\n      <div class=\"question\" data-points=\"2\">\n        <h3>Question 15: Which of the following is a potential limitation of Agent Sim in mimicking human behavior?</h3>\n        <label><input type=\"radio\" name=\"q15\" value=\"A\"> A) Agents in simulations are always more intelligent than humans.</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"B\" data-correct=\"true\"> B) Capturing the full range of human emotions, motivations, and unpredictable behaviors in a simulation remains a complex challenge.</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"C\"> C) Agent Sim can perfectly replicate all aspects of human behavior.</label>\n        <label><input type=\"radio\" name=\"q15\" value=\"D\"> D) The computational power required to simulate human behavior is negligible.</label>\n      </div>\n\n      <button id=\"submitBtn\" type=\"button\" onclick=\"calculateScore()\">Submit Exam</button>\n    </form>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    // Функция перемешивания (не вызываем её, чтобы сохранить порядок вопросов)\n    function shuffle(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n      return array;\n    }\n\n    // Не вызываем randomizeAnswers, чтобы порядок вариантов оставался неизменным\n\n    let timer;\n    let seconds = 0;\n    const timeLimit = 300; // 5 минут\n    // examName установлен как \"Agent Sim\"\n    const examName = \"Agent Sim\";\n\n    function startQuiz() {\n      document.getElementById('titlePage').classList.add('hidden');\n      document.getElementById('quizContainer').classList.remove('hidden');\n      startTimer();\n    }\n\n    function startTimer() {\n      timer = setInterval(() => {\n        seconds++;\n        const minutes = Math.floor(seconds / 60);\n        const rem = seconds % 60;\n        document.getElementById('timer').textContent =\n          String(minutes).padStart(2, '0') + \":\" + String(rem).padStart(2, '0');\n        if (seconds >= timeLimit) {\n          clearInterval(timer);\n          calculateScore(true);\n        }\n      }, 1000);\n    }\n\n    // Форматирует дату в формате \"dd.mm.yyyy hh:mm\"\n    function formatDate(date) {\n      const options = {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false\n      };\n      const formatted = date.toLocaleString(\"en-GB\", options);\n      return formatted.replace(/\\//g, \".\").replace(\", \", \" \");\n    }\n\n    function calculateScore(timeout = false) {\n      const submitButton = document.getElementById('submitBtn');\n      if (submitButton) {\n        submitButton.style.display = 'none';\n      }\n      clearInterval(timer);\n      let totalPoints = 0;\n      let maxPoints = 0;\n      const questions = document.querySelectorAll('.question');\n      questions.forEach(question => {\n        const points = parseInt(question.dataset.points) || 1;\n        maxPoints += points;\n        if (points === 0) return; // Пропускаем блок с информацией о пользователе\n        let correct = true;\n        const inputs = question.querySelectorAll('input');\n        let selectedValues = [];\n        let correctValues = [];\n        inputs.forEach(inp => {\n          if (inp.checked) selectedValues.push(inp.value);\n          if (inp.dataset.correct === \"true\") correctValues.push(inp.value);\n        });\n        if (\n          selectedValues.length !== correctValues.length ||\n          !selectedValues.every(val => correctValues.includes(val))\n        ) {\n          correct = false;\n        }\n        if (correct) {\n          totalPoints += points;\n          question.classList.add('correct');\n        } else {\n          question.classList.add('incorrect');\n          inputs.forEach(inp => {\n            if (inp.dataset.correct === \"true\") {\n              inp.parentElement.classList.add('correct-answer');\n            }\n          });\n        }\n      });\n      const percentage = ((totalPoints / maxPoints) * 100).toFixed(1);\n      const timeUsed = `${Math.floor(seconds / 60)}m ${seconds % 60}s`;\n      let resultsHTML = `\n        <h3>Exam Results</h3>\n        <p>Your score: ${totalPoints} / ${maxPoints} (${percentage}%)</p>\n        <p>Time used: ${timeUsed}</p>\n        ${percentage >= 80 ? \"Congratulations! You passed!\" : \"Try again! Review your mistakes below.\"}\n        ${timeout ? \"<p class='warning'>Time limit exceeded!</p>\" : \"\"}\n      `;\n      resultsHTML += `\n        <button type=\"button\" onclick=\"location.reload()\">Retry</button>\n        <button type=\"button\" onclick=\"window.location.href='#'\">Read Again</button>\n        <button type=\"button\" id=\"taskButton\" onclick=\"loadTask()\">Task</button>\n      `;\n      document.getElementById('result').innerHTML = resultsHTML;\n\n      const fullName = document.querySelector('[name=\"fullName\"]')?.value.trim() || \"\";\n      const profession = document.querySelector('[name=\"profession\"]')?.value.trim() || \"\";\n      const recruiter = document.querySelector('[name=\"recruiter\"]')?.value.trim() || \"\";\n      const postData = {\n        fullName,\n        profession,\n        recruiter,\n        day: \"5\",\n        examName,\n        scoreObtained: totalPoints,\n        scoreTotal: maxPoints,\n        timeUsed: seconds,\n        timeTotal: timeLimit,\n        date: formatDate(new Date())\n      };\n\n      fetch(\"https://auto.crm-s.com/webhook/Onboarding/Update\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json, text/plain, */*\"\n        },\n        body: JSON.stringify(postData),\n        mode: \"cors\"\n      })\n      .then(async (res) => {\n        console.log(\"POST response status:\", res.status);\n        const text = await res.text();\n        console.log(\"POST response body:\", text);\n      })\n      .catch(err => console.error(\"Error in POST:\", err));\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n    }\n\n    // loadTask() заменяет вид экзамена инструкциями по заданию\n    function loadTask() {\n      const taskMarkdown = `# 🛠 Agent Sim - Practice Task\n\n# 🔹 Design a simple exercise based on the guide. Focus on:\n- Understanding what agent simulation is and its core principles (autonomy, interaction, emergence, decentralization, heterogeneity).\n- Outlining a basic simulation scenario (e.g., crowd evacuation, traffic flow, or market dynamics) using agent simulation concepts.\n- Describing how individual agents interact with their environment and each other.\n- Identifying potential challenges (like model complexity, computational resources, or ethical issues) and proposing simple improvements.\n\n# ✅ Steps:\n\n1. Define the Simulation Scenario: Choose a simple scenario to simulate, for example, \"Simulate crowd evacuation in a building.\" Clearly state the simulation objective.\n\n2. Identify Agents and Environment: List the types of agents (e.g., people) and describe the environment (e.g., a building layout with exits). Write down key properties for the agents (such as speed and decision rules).\n\n3. Outline Agent Rules and Interactions: Define simple rules for agent behavior. For instance, agents move toward the nearest exit, avoid obstacles, and follow others if paths are blocked.\n\n4. Predict Emergent Behavior: Describe how the interactions of individual agents might lead to overall patterns (e.g., bottlenecks at exits or smooth evacuation flows).\n\n5. Identify Challenges and Propose Improvements: List potential challenges (like high computational load or difficulties in model validation) and suggest basic strategies to overcome them.\n\n6. Visualize the Simulation: Create a simple flowchart or diagram. Map out the simulation steps, agent interactions, and expected outcomes.\n\n# ✏️ When finished, mark the checkbox and optionally provide a link to your app.diagrams.net or app.napkin.ai with your practice task.`;\n\n      const parsedMarkdown = parseMarkdown(taskMarkdown);\n      document.body.innerHTML = `\n        <div style=\"font-family: 'Open Sans', sans-serif; background: #F8F9FA; padding: 2rem; max-width: 800px; margin: 0 auto;\">\n          ${parsedMarkdown}\n          <div style=\"margin-top: 2rem;\">\n            <label for=\"taskLinkInput\" style=\"font-weight: bold;\">Optional link to your work:</label>\n            <input type=\"text\" id=\"taskLinkInput\" placeholder=\"https://app.diagrams.net/...\" style=\"width: 100%; padding: 8px; margin: 4px 0 1rem;\">\n            <input type=\"checkbox\" id=\"taskCompletedCheckbox\">\n            <label for=\"taskCompletedCheckbox\">Task Completed</label>\n          </div>\n        </div>\n      `;\n      const checkbox = document.getElementById(\"taskCompletedCheckbox\");\n      checkbox.addEventListener(\"change\", function() {\n        if (checkbox.checked) {\n          const taskLink = document.getElementById(\"taskLinkInput\").value.trim() || \"\";\n          checkbox.disabled = true;\n          fetch(\"https://auto.crm-s.com/webhook/Onboarding/UpdateTaskTable\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Accept\": \"application/json, text/plain, */*\"\n            },\n            body: JSON.stringify({\n              link: taskLink,\n              date: formatDate(new Date())\n            }),\n            mode: \"cors\"\n          })\n          .then(async (res) => {\n            console.log(\"Task completed webhook status:\", res.status);\n            const text = await res.text();\n            console.log(\"Task completed webhook body:\", text);\n          })\n          .catch(err => {\n            console.error(\"Error sending task completed webhook:\", err);\n            alert(\"There was an issue connecting to the server. Your instructor will be notified.\");\n          });\n        }\n      });\n    }\n\n    // Markdown parser: преобразует заголовки markdown (#, ##, ###, ####) в блоки <details> (свернутые по умолчанию)\n    function parseMarkdown(markdownText) {\n      const lines = markdownText.split('\\n');\n      let html = \"\";\n      const stack = [];\n      lines.forEach(line => {\n        const match = line.match(/^(#{1,4})\\s+(.*)/);\n        if (match) {\n          const level = match[1].length;\n          const text = match[2];\n          while (stack.length && stack[stack.length - 1] >= level) {\n            html += \"</details>\";\n            stack.pop();\n          }\n          html += `<details><summary>${text}</summary>`;\n          stack.push(level);\n        } else {\n          html += line + \"<br>\";\n        }\n      });\n      while (stack.length) {\n        html += \"</details>\";\n        stack.pop();\n      }\n      return html;\n    }\n\n    // Добавляем обработчик для кнопки Start Exam после загрузки DOM\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      document.getElementById(\"startExamBtn\").addEventListener(\"click\", startQuiz);\n    });\n  </script>\n</body>\n</html>",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-type",
                "value": "text/html"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        40,
        -60
      ],
      "id": "bf5e0f68-899d-4e75-8c36-9197b2199396",
      "name": "Respond to Webhook",
      "notesInFlow": false
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "4fcd96cf-857f-4a82-a9ec-0caf68d79bcf",
  "triggerCount": 0,
  "tags": []
}